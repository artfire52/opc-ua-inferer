#[cfg(test)]
mod tests {


    use crate::crypto::raw_rsa::{raw_rsa,raw_rsa_pkcs15, raw_rsa_per_block};
    use crate::crypto::encryption::*;
    use crate::crypto::pkey::{PrivateKey, PublicKey};
    use crate::crypto::security_policy::{SecurityPolicy, SecurityPolicyUri};
    use crate::crypto::signature::{AsymmetricSignatureAlgorithm, AsymmetricSigner, SymmetricSigner, SymmetricSignatureAlgorithm};
    use crate::crypto::tests::decode_hex;
    use crate::msg;

    //openssl enc -aes-256-cbc -k secret -P
    // salt=A0C7C56637A846E8
    // key=D4E3138A412187FCAF595D339379383BB30E5320B4C02AA904CF9A5707359108
    // iv =B6A6EC46076F4E9D51BFF50B5F078DCB

    #[test]
    fn aes_256_cbc() {
        let key = "itsakeyitsakeyitsakeyitsakeykey!".as_bytes().to_vec();
        let iv = "itsaninitializat".as_bytes().to_vec();
        let msg_to_encrypt = "12345678901234567890123456789012".as_bytes();

        let mut encryption =
            Encryption::new_symmetric(SymmetricEncryptionAlgorithm::Aes256CBC, key, Some(iv));
        let result = encryption.encrypt(msg_to_encrypt);
        let result = encryption.decrypt(&result);
        assert_eq!(msg_to_encrypt, result);
    }
    use std::fs;

    // openssl pkeyutl -in to_encrypt  -inkey pubkey.pem -keyform PEM -pubin -encrypt -pkeyopt rsa_padding_mode:oaep -pkeyopt rsa_oaep_md:sha256 -hexdump

    #[test]
    fn rsa_oaepsha256() {
        let pem_key = fs::read("src/crypto/tests/key.pem").unwrap();
        let pem_pubkey = fs::read("src/crypto/tests/pubkey.pem").unwrap();
        let key = PrivateKey::private_key_from_pem(&pem_key).unwrap();
        let pubkey = PublicKey::public_key_from_pem(&pem_pubkey).unwrap();
        let msg_to_encrypt = "please work\n".as_bytes();

        let mut encryption = Encryption::new_asymmetric_encrypter_decrypter(
            AsymmetricEncryptionAlgorithm::RsaOAEPSHA2256,
            &key,
            &pubkey,
        );
        let result = encryption.encrypt(msg_to_encrypt);
        let goal = decode_hex(
            "39f9e0151a3c7405236174c31ab0fe44\
                                    dfdb93a9cb9725e5b704b76c7ac85034\
                                    e5886518664739382cbdb1e0cc6b72ad\
                                    c61149d45f85300cf73139a53dde975f\
                                    5ba6c3f15120032c18279f5de9cb7045\
                                    f48c14567c6339248ed433cbfa704810\
                                    0f5cbbd29c4baf9cb0749d23d77ab8df\
                                    4ada8a1137d3593d15586a76577ca458\
                                    9404a704190d367ce02f03874aafc193\
                                    83fe266771c47976aa2af0978a106f77\
                                    09907e6721a0184f56e0d6570131683c\
                                    ea57bebe515f81e5e18652ce16c9f180\
                                    237d15e9605a5fbaff02094289587c5a\
                                    e4514ff3e688842a3da1ee3d81f38e33\
                                    9931b36e956a9ce6bdb5a3de62a80f97\
                                    549c863c8cd59923753324c52534029f",
        )
        .unwrap();
        assert_eq!(goal.len(), result.len());
        let result = encryption.decrypt(&result);
        assert_eq!(msg_to_encrypt, result);
    }
    #[test]
    fn rsa_rsa_pkcs15() {
        let pem_key = fs::read("src/crypto/tests/key.pem").unwrap();
        let pem_pubkey = fs::read("src/crypto/tests/pubkey.pem").unwrap();
        let key = PrivateKey::private_key_from_pem(&pem_key).unwrap();
        let pubkey = PublicKey::public_key_from_pem(&pem_pubkey).unwrap();
        let msg_to_encrypt = "please work\n".as_bytes();

        let mut encryption = Encryption::new_asymmetric_encrypter_decrypter(
            AsymmetricEncryptionAlgorithm::RsaPKCS15,
            &key,
            &pubkey,
        );
        let result = encryption.encrypt(msg_to_encrypt);
        let goal = decode_hex(
            "39f9e0151a3c7405236174c31ab0fe44\
                                    dfdb93a9cb9725e5b704b76c7ac85034\
                                    e5886518664739382cbdb1e0cc6b72ad\
                                    c61149d45f85300cf73139a53dde975f\
                                    5ba6c3f15120032c18279f5de9cb7045\
                                    f48c14567c6339248ed433cbfa704810\
                                    0f5cbbd29c4baf9cb0749d23d77ab8df\
                                    4ada8a1137d3593d15586a76577ca458\
                                    9404a704190d367ce02f03874aafc193\
                                    83fe266771c47976aa2af0978a106f77\
                                    09907e6721a0184f56e0d6570131683c\
                                    ea57bebe515f81e5e18652ce16c9f180\
                                    237d15e9605a5fbaff02094289587c5a\
                                    e4514ff3e688842a3da1ee3d81f38e33\
                                    9931b36e956a9ce6bdb5a3de62a80f97\
                                    549c863c8cd59923753324c52534029f",
        )
        .unwrap();
        assert_eq!(goal.len(), result.len());
        let result = encryption.decrypt(&result);
        assert_eq!(msg_to_encrypt, result);
    }

    #[test]
    fn rsa_oaepsha1() {
        let pem_key = fs::read("src/crypto/tests/key.pem").unwrap();
        let pem_pubkey = fs::read("src/crypto/tests/pubkey.pem").unwrap();
        let key = PrivateKey::private_key_from_pem(&pem_key).unwrap();
        let pubkey = PublicKey::public_key_from_pem(&pem_pubkey).unwrap();
        let msg_to_encrypt = "please work\n".as_bytes();

        let mut encryption = Encryption::new_asymmetric_encrypter_decrypter(
            AsymmetricEncryptionAlgorithm::RsaOAEPSHA1,
            &key,
            &pubkey,
        );
        let result = encryption.encrypt(msg_to_encrypt);
        let goal = decode_hex(
            "39f9e0151a3c7405236174c31ab0fe44\
                                    dfdb93a9cb9725e5b704b76c7ac85034\
                                    e5886518664739382cbdb1e0cc6b72ad\
                                    c61149d45f85300cf73139a53dde975f\
                                    5ba6c3f15120032c18279f5de9cb7045\
                                    f48c14567c6339248ed433cbfa704810\
                                    0f5cbbd29c4baf9cb0749d23d77ab8df\
                                    4ada8a1137d3593d15586a76577ca458\
                                    9404a704190d367ce02f03874aafc193\
                                    83fe266771c47976aa2af0978a106f77\
                                    09907e6721a0184f56e0d6570131683c\
                                    ea57bebe515f81e5e18652ce16c9f180\
                                    237d15e9605a5fbaff02094289587c5a\
                                    e4514ff3e688842a3da1ee3d81f38e33\
                                    9931b36e956a9ce6bdb5a3de62a80f97\
                                    549c863c8cd59923753324c52534029f",
        )
        .unwrap();
        assert_eq!(goal.len(), result.len());
        let result = encryption.decrypt(&result);
        assert_eq!(msg_to_encrypt, result);
    }

    #[test]
    fn signature_test_rsa() {
        let pem_key = fs::read("src/crypto/tests/key.pem").unwrap();
        let pem_pubkey = fs::read("src/crypto/tests/pubkey.pem").unwrap();
        let key = PrivateKey::private_key_from_pem(&pem_key).unwrap();
        let pubkey = PublicKey::public_key_from_pem(&pem_pubkey).unwrap();
        let data = crate::crypto::random::byte_string(1820).value.unwrap();
        let mut signer =
            AsymmetricSigner::new(&key, &pubkey, AsymmetricSignatureAlgorithm::RsaPKCS15Sha256);
        let signature = signer.sign(&data);
        assert!(signer.verify(&data, &signature));
        let signature = signer.sign(&data);
        assert!(signer.verify(&data, &signature));
        let mut signer =
            AsymmetricSigner::new(&key, &pubkey, AsymmetricSignatureAlgorithm::RsaPKCS15Sha1);
        let signature = signer.sign(&data);
        assert!(signer.verify(&data, &signature));
        let signature = signer.sign(&data);
        assert!(signer.verify(&data, &signature));
        let mut signer =
            AsymmetricSigner::new(&key, &pubkey, AsymmetricSignatureAlgorithm::RsaPssSha256);
        let signature = signer.sign(&data);
        assert!(signer.verify(&data, &signature));
        let data = crate::crypto::random::byte_string(1750).value.unwrap();
        let signature = signer.sign(&data);
        assert!(signer.verify(&data, &signature));
    }


    #[test]
    fn open_secure_channel_uaexpert_signature_verification_decryption() {
        let plaintext_header="4f504e46700700000000000039000000687474703a2f2f6f7063666f756e646174696f6e2e6f72672f55412f5365637572697479506f6c6963792342617369633235365368613235360b05000030820507308203efa0030201020204628e4cbf300d06092a864886f70d01010b0500306e310b3009060355040613026672310f300d06035504080c066672616e6365310f300d06035504070c066672616e6365310c300a060355040a0c03747370310c300a060355040b0c037273743121301f06035504030c185561457870657274406172746875722d636f6d7075746572301e170d3232303532353135333532375a170d3237303532343135333532375a306e310b3009060355040613026672310f300d06035504080c066672616e6365310f300d06035504070c066672616e6365310c300a060355040a0c03747370310c300a060355040b0c037273743121301f06035504030c185561457870657274406172746875722d636f6d707574657230820122300d06092a864886f70d01010105000382010f003082010a0282010100c746ee14ed257cc8ef0d18fd3a6dd92c1f779b55978bca7b8619e433369da8fc577a6e0cfb541d11698651cdd1ab2cee04809ead37e64b33df938b05b1250a9da7849adce299285dd289a45de52a7304dda455d1ce02fdba962e258d49d380c49371637fac3a5ebddb7e532e9389ba8391a671fd95b6212d13001f4863b543792efa7e2b4366f25b141c88fc3741643d7988df0b4c4192b46fba7faaf95b84c1d73298d4b908eabdfcf8e6f3678464cb5d128e7b98d2a9c3ed5c8d15600ab918b6d5644663a78e6f1cb8e4ae33311b37c0462a0931296c393b4886d2fed5e1ae88afc706d129b466aec6a591bca378a80ab1237f330c15c70110a2b30fc125670203010001a38201ab308201a730120603551d130101ff040830060101ff020100305006096086480186f842010d044316412247656e657261746564207769746820556e6966696564204175746f6d6174696f6e2055412042617365204c696272617279207573696e67204f70656e53534c22301d0603551d0e041604147a42d750534d8a4cd0c88d25edec5acab6cb74cd30819b0603551d2304819330819080147a42d750534d8a4cd0c88d25edec5acab6cb74cda172a470306e310b3009060355040613026672310f300d06035504080c066672616e6365310f300d06035504070c066672616e6365310c300a060355040a0c03747370310c300a060355040b0c037273743121301f06035504030c185561457870657274406172746875722d636f6d70757465728204628e4cbf300e0603551d0f0101ff0404030202f430200603551d250101ff0416301406082b0601050507030106082b0601050507030230500603551d1104493047862e75726e3a6172746875722d636f6d70757465723a556e69666965644175746f6d6174696f6e3a5561457870657274820f6172746875722d636f6d707574657287047f000001300d06092a864886f70d01010b05000382010100bcf7ee2a5769c333a53025eb8c3c97f9a486d278dffc739385842a56ec3f9df6e0908d031b63dc0438abbd6f8fd2f631d2df8c65205915102a0cd8e655f5dcacef00175bf9c634677ff40db3f9585f0c946faa7904db78063be5fa81bf642590ff6ef6660308ba1d8f8e869b0490afc63eae73ffad012c69e62a7ecc8feaa74435246c86ba323c9edb9a51b7d803a33cef94e6ba5b962820743109f377c0fd596a3ade429e6490c6c2a88d94ac00a40a7d53111d031446298c67761d8a80744afee4a390649528f41eb8c8a66b150cebdb4e099de2c36bedbbe46544b767f7f89fb017996d4aade56fe36502368be4bd5386026f730086ce8e6733bc25342ff114000000821de79e9b71e7310a80340bc92a2c3a23c82c96";
        let mut plaintext_header = decode_hex(plaintext_header).unwrap();
        let encrypted= "869240bd3d3a81a5d6932fd106158d07918590b9484c6362ff8fd64552b9257e33f9926598bac67b50e5d56768085146f0aaf6312cf131455cf45a548badcdf0261be1c45c326624799869b920171d9c707b0e0e5e9121128e5a8744af1cd142c94e027ff8d32c2ab32da5bbbbb4a657b3b70d09c99c273f21e8c43d8e894cf282073b2ce7711d75552f64f0d57729083ccb82928b1d0bb9b1e04e4d3af5a43ffd64b72fa2d18ebdd6bf4ad4019e19fb78746f5bc7df59bb08a4a4cb1b107e1071505b983e1416397bfb644aad7a6a8a91a19cc8def540d1aa2498d5bde9f1d2f5e0caf89400edb95e34e32f8c4371259ca6fe7ddf9f81b59c1597881f1e6c2b4e9211480d4a2e67cfd2e6bbcecaaf13bdf84f19dfa81c80609fc58625a1c7c2a25b0607a2c8b9c2e3c0793a4b74113dc2b3c8380db43a3ea7009294889232f6efade11f4d49ae6c1753c84938265f7eb82be1bedae2c8efdc5572f1581f233d05ca979d0a610ccc385303105b6bf85d949d43b3ae05a940a2c4a610785190ed71ff566eb987d0f1c751cef704ee8f8c5dfbeab3377aa550e5f348b884ad9ca2b104e2b1e53c11183505bc424ccc7bf1bae58bb92c66a94e57ae128a1ef30b0194603bebff34814a7025388f6b95b608d6ab606473372e356468b949f81142a54aadfd24197ea8e05423610397507e605e4aeffd6572bad5210931eafbfe45c8";
        let encrypted = decode_hex(encrypted).unwrap();

        let pem_key = fs::read("src/crypto/tests/key_server_ctt.der").unwrap();
        let key = PrivateKey::private_key_from_der(&pem_key).unwrap();
        let server_cert_raw = std::fs::read("src/crypto/tests/uaexpert.der").unwrap();
        let server_cert = openssl::x509::X509::from_der(&server_cert_raw).unwrap();
        let pubkey = server_cert.public_key().unwrap();
        let mut crypto =
            EncrypterDecrypter::new(AsymmetricEncryptionAlgorithm::RsaOAEPSHA1, &key, &pubkey);
        let decrypted = crypto.decrypt(&encrypted);
        plaintext_header.extend(&decrypted);
        let pem_key = fs::read("src/crypto/tests/uaexpert_key.der").unwrap();
        let key = PrivateKey::private_key_from_der(&pem_key).unwrap();
        let server_cert_raw = std::fs::read("src/crypto/tests/uaexpert.der").unwrap();
        let server_cert = openssl::x509::X509::from_der(&server_cert_raw).unwrap();
        let pubkey = server_cert.public_key().unwrap();
        let mut signer =
            AsymmetricSigner::new(&key, &pubkey, AsymmetricSignatureAlgorithm::RsaPKCS15Sha256);
        let result = signer.verify(
            &plaintext_header[..(1820 - 256)],
            &plaintext_header[(1820 - 256)..],
        );
        assert!(result);
    }

    #[test]
    fn open_secure_channel_uaexpert_signature_verification_decryption_sec_policy() {
        let plaintext_header="4f504e46700700000000000039000000687474703a2f2f6f7063666f756e646174696f6e2e6f72672f55412f5365637572697479506f6c6963792342617369633235365368613235360b05000030820507308203efa0030201020204628e4cbf300d06092a864886f70d01010b0500306e310b3009060355040613026672310f300d06035504080c066672616e6365310f300d06035504070c066672616e6365310c300a060355040a0c03747370310c300a060355040b0c037273743121301f06035504030c185561457870657274406172746875722d636f6d7075746572301e170d3232303532353135333532375a170d3237303532343135333532375a306e310b3009060355040613026672310f300d06035504080c066672616e6365310f300d06035504070c066672616e6365310c300a060355040a0c03747370310c300a060355040b0c037273743121301f06035504030c185561457870657274406172746875722d636f6d707574657230820122300d06092a864886f70d01010105000382010f003082010a0282010100c746ee14ed257cc8ef0d18fd3a6dd92c1f779b55978bca7b8619e433369da8fc577a6e0cfb541d11698651cdd1ab2cee04809ead37e64b33df938b05b1250a9da7849adce299285dd289a45de52a7304dda455d1ce02fdba962e258d49d380c49371637fac3a5ebddb7e532e9389ba8391a671fd95b6212d13001f4863b543792efa7e2b4366f25b141c88fc3741643d7988df0b4c4192b46fba7faaf95b84c1d73298d4b908eabdfcf8e6f3678464cb5d128e7b98d2a9c3ed5c8d15600ab918b6d5644663a78e6f1cb8e4ae33311b37c0462a0931296c393b4886d2fed5e1ae88afc706d129b466aec6a591bca378a80ab1237f330c15c70110a2b30fc125670203010001a38201ab308201a730120603551d130101ff040830060101ff020100305006096086480186f842010d044316412247656e657261746564207769746820556e6966696564204175746f6d6174696f6e2055412042617365204c696272617279207573696e67204f70656e53534c22301d0603551d0e041604147a42d750534d8a4cd0c88d25edec5acab6cb74cd30819b0603551d2304819330819080147a42d750534d8a4cd0c88d25edec5acab6cb74cda172a470306e310b3009060355040613026672310f300d06035504080c066672616e6365310f300d06035504070c066672616e6365310c300a060355040a0c03747370310c300a060355040b0c037273743121301f06035504030c185561457870657274406172746875722d636f6d70757465728204628e4cbf300e0603551d0f0101ff0404030202f430200603551d250101ff0416301406082b0601050507030106082b0601050507030230500603551d1104493047862e75726e3a6172746875722d636f6d70757465723a556e69666965644175746f6d6174696f6e3a5561457870657274820f6172746875722d636f6d707574657287047f000001300d06092a864886f70d01010b05000382010100bcf7ee2a5769c333a53025eb8c3c97f9a486d278dffc739385842a56ec3f9df6e0908d031b63dc0438abbd6f8fd2f631d2df8c65205915102a0cd8e655f5dcacef00175bf9c634677ff40db3f9585f0c946faa7904db78063be5fa81bf642590ff6ef6660308ba1d8f8e869b0490afc63eae73ffad012c69e62a7ecc8feaa74435246c86ba323c9edb9a51b7d803a33cef94e6ba5b962820743109f377c0fd596a3ade429e6490c6c2a88d94ac00a40a7d53111d031446298c67761d8a80744afee4a390649528f41eb8c8a66b150cebdb4e099de2c36bedbbe46544b767f7f89fb017996d4aade56fe36502368be4bd5386026f730086ce8e6733bc25342ff114000000821de79e9b71e7310a80340bc92a2c3a23c82c96869240bd3d3a81a5d6932fd106158d07918590b9484c6362ff8fd64552b9257e33f9926598bac67b50e5d56768085146f0aaf6312cf131455cf45a548badcdf0261be1c45c326624799869b920171d9c707b0e0e5e9121128e5a8744af1cd142c94e027ff8d32c2ab32da5bbbbb4a657b3b70d09c99c273f21e8c43d8e894cf282073b2ce7711d75552f64f0d57729083ccb82928b1d0bb9b1e04e4d3af5a43ffd64b72fa2d18ebdd6bf4ad4019e19fb78746f5bc7df59bb08a4a4cb1b107e1071505b983e1416397bfb644aad7a6a8a91a19cc8def540d1aa2498d5bde9f1d2f5e0caf89400edb95e34e32f8c4371259ca6fe7ddf9f81b59c1597881f1e6c2b4e9211480d4a2e67cfd2e6bbcecaaf13bdf84f19dfa81c80609fc58625a1c7c2a25b0607a2c8b9c2e3c0793a4b74113dc2b3c8380db43a3ea7009294889232f6efade11f4d49ae6c1753c84938265f7eb82be1bedae2c8efdc5572f1581f233d05ca979d0a610ccc385303105b6bf85d949d43b3ae05a940a2c4a610785190ed71ff566eb987d0f1c751cef704ee8f8c5dfbeab3377aa550e5f348b884ad9ca2b104e2b1e53c11183505bc424ccc7bf1bae58bb92c66a94e57ae128a1ef30b0194603bebff34814a7025388f6b95b608d6ab606473372e356468b949f81142a54aadfd24197ea8e05423610397507e605e4aeffd6572bad5210931eafbfe45c8";
        let mut plaintext_header = decode_hex(plaintext_header).unwrap();
        let offset = msg::get_offset_to_encrypt(&plaintext_header).unwrap();
        let encrypted = plaintext_header[offset..].to_vec();
        plaintext_header.truncate(offset);

        let pem_key = fs::read("src/crypto/tests/key_server_ctt.der").unwrap();
        let key = PrivateKey::private_key_from_der(&pem_key).unwrap();
        let client_cert_raw = std::fs::read("src/crypto/tests/uaexpert.der").unwrap();
        let client_cert = openssl::x509::X509::from_der(&client_cert_raw).unwrap();
        let pubkey = client_cert.public_key().unwrap();
        let mut security_policy = SecurityPolicy::new(SecurityPolicyUri::Basic256Sha256);
        security_policy.set_asym(&key, &pubkey);
        let encrypter = security_policy.asymmetric_encryption.as_mut().unwrap();
        let decrypted = encrypter.decrypt(&encrypted);
        plaintext_header.extend(&decrypted);
        let signer = security_policy
            .asymmetric_signature_algorithm
            .as_mut()
            .unwrap();
        let result = signer.verify(
            &plaintext_header[..(1820 - 256)],
            &plaintext_header[(1820 - 256)..],
        );
        assert!(result);
    }

    use crate::Deserialize;
    fn seperate_plaintext_encryption(data: &str) -> (Vec<u8>, Vec<u8>) {
        let mut plaintext_header = decode_hex(data).unwrap();
        let offset = msg::get_offset_to_encrypt(&plaintext_header).unwrap();
        let encrypted = plaintext_header[offset..].to_vec();
        plaintext_header.truncate(offset);
        (plaintext_header, encrypted)
    }

    //opn secure channel req, resp + create_session req resp
    //test for symmetric cryptographic 
    #[test]
    fn create_session_uaexpert_signature_verification_decryption() {
        //open secure messages
        let (mut plaintext_client,encrypted_client)=seperate_plaintext_encryption("4f504e46700700000000000039000000687474703a2f2f6f7063666f756e646174696f6e2e6f72672f55412f5365637572697479506f6c6963792342617369633235365368613235360b05000030820507308203efa0030201020204628e4cbf300d06092a864886f70d01010b0500306e310b3009060355040613026672310f300d06035504080c066672616e6365310f300d06035504070c066672616e6365310c300a060355040a0c03747370310c300a060355040b0c037273743121301f06035504030c185561457870657274406172746875722d636f6d7075746572301e170d3232303532353135333532375a170d3237303532343135333532375a306e310b3009060355040613026672310f300d06035504080c066672616e6365310f300d06035504070c066672616e6365310c300a060355040a0c03747370310c300a060355040b0c037273743121301f06035504030c185561457870657274406172746875722d636f6d707574657230820122300d06092a864886f70d01010105000382010f003082010a0282010100c746ee14ed257cc8ef0d18fd3a6dd92c1f779b55978bca7b8619e433369da8fc577a6e0cfb541d11698651cdd1ab2cee04809ead37e64b33df938b05b1250a9da7849adce299285dd289a45de52a7304dda455d1ce02fdba962e258d49d380c49371637fac3a5ebddb7e532e9389ba8391a671fd95b6212d13001f4863b543792efa7e2b4366f25b141c88fc3741643d7988df0b4c4192b46fba7faaf95b84c1d73298d4b908eabdfcf8e6f3678464cb5d128e7b98d2a9c3ed5c8d15600ab918b6d5644663a78e6f1cb8e4ae33311b37c0462a0931296c393b4886d2fed5e1ae88afc706d129b466aec6a591bca378a80ab1237f330c15c70110a2b30fc125670203010001a38201ab308201a730120603551d130101ff040830060101ff020100305006096086480186f842010d044316412247656e657261746564207769746820556e6966696564204175746f6d6174696f6e2055412042617365204c696272617279207573696e67204f70656e53534c22301d0603551d0e041604147a42d750534d8a4cd0c88d25edec5acab6cb74cd30819b0603551d2304819330819080147a42d750534d8a4cd0c88d25edec5acab6cb74cda172a470306e310b3009060355040613026672310f300d06035504080c066672616e6365310f300d06035504070c066672616e6365310c300a060355040a0c03747370310c300a060355040b0c037273743121301f06035504030c185561457870657274406172746875722d636f6d70757465728204628e4cbf300e0603551d0f0101ff0404030202f430200603551d250101ff0416301406082b0601050507030106082b0601050507030230500603551d1104493047862e75726e3a6172746875722d636f6d70757465723a556e69666965644175746f6d6174696f6e3a5561457870657274820f6172746875722d636f6d707574657287047f000001300d06092a864886f70d01010b05000382010100bcf7ee2a5769c333a53025eb8c3c97f9a486d278dffc739385842a56ec3f9df6e0908d031b63dc0438abbd6f8fd2f631d2df8c65205915102a0cd8e655f5dcacef00175bf9c634677ff40db3f9585f0c946faa7904db78063be5fa81bf642590ff6ef6660308ba1d8f8e869b0490afc63eae73ffad012c69e62a7ecc8feaa74435246c86ba323c9edb9a51b7d803a33cef94e6ba5b962820743109f377c0fd596a3ade429e6490c6c2a88d94ac00a40a7d53111d031446298c67761d8a80744afee4a390649528f41eb8c8a66b150cebdb4e099de2c36bedbbe46544b767f7f89fb017996d4aade56fe36502368be4bd5386026f730086ce8e6733bc25342ff114000000821de79e9b71e7310a80340bc92a2c3a23c82c9622b314b2968c0c10f96aa70d3110fa52f706b13a1c9f87ef562970c2cb1c59539e620653b02bae024ab7cb1d47bfa325b6012d230216b48e2e444c24f8f59ff06275eda36c2a3d393c51faaa50f8ee398a41d9cd3ee56b5119cc26e4e6340a87d9a3408f49eb0af2af3e643e894322d71788e8f3c1d39bd98943b7d5c0cab99cb9db04c3809eeec94b8e9170223a44d36356f25e57ec625e7d792cd212be8357f80031b749ecd9a1b7a273ceb653e96d42fa6b304569a980b141b64e5618bfdf50a53d793ff5b286088537879990dbb16fbf4ce5f3cdca0a90eb978bf7baeeca2b348e8fbb88802a95f4a676494e3d0b8040592b0f2adb0edef5a66705d455a6735a00d21e8d97690bcccaa4c9999222acd5f8ad392c885fbe73828abd395970cabf7cf54f2326bee20f39702b93c2e570f5418a4007fb7f393aa8bb30711c31d064ecdaca8c742b5cfeb6fdaacd21ae124c3392bc250a10cba619237e023018c185b84722ec834c90adfa8aeb65e0c6bef73a4d5e3aa67625a862c46adba637e9b49f219e551e33da782c555bea11756b454e06814bf19369464f7082d78af4f9ec12d63a438c5e59346192b6cb04242af602bb2fffcb81686635f35c0fcb6128129c7889ecdd17991562b23f26965d67a7fd34ac4f81901f1262d58b2433303fe439cc40efb700d25b3a9d8bab115e537177a59e3676209612e42b6609fcef");
        let (mut plaintext_server,encrypted_server)=seperate_plaintext_encryption("4f504e46b80600000200000039000000687474703a2f2f6f7063666f756e646174696f6e2e6f72672f55412f5365637572697479506f6c696379234261736963323536536861323536530400003082044f30820337a003020102021449b1e44dc0660bf9720575beb5f24014255bf617300d06092a864886f70d01010b0500308180310b3009060355040613026672310f300d06035504080c066672616e63653112301006035504070c0970616c616973656175310c300a060355040a0c03747370310c300a060355040b0c037273743112301006035504030c09736572766572637474311c301a06092a864886f70d010901160d7265616c406d61696c2e636f6d301e170d3232303530393130303130365a170d3233303331373130303130365a308180310b3009060355040613026672310f300d06035504080c066672616e63653112301006035504070c0970616c616973656175310c300a060355040a0c03747370310c300a060355040b0c037273743112301006035504030c09736572766572637474311c301a06092a864886f70d010901160d7265616c406d61696c2e636f6d30820122300d06092a864886f70d01010105000382010f003082010a0282010100a333dc608e3566306034e9da1a0193cbc0dde240c8e472b60c67c39a49672197475ff13be923ff203b1bf5010b03022fbb607633d5fbaadd3c0d2fe278bb4f7ec7695872da23c9e369cfe646205d15c3907d30f0df187348bb3ed4859857f9fe3f31e2f70db86509bdcf28b5fef45235b534ab38fdb2574b1d72352bb903abdacbc73bd4d394c6094f2f19ed0d272da12f1a198bd01984d9824746caec3a1daae45d32e8c6e68d844b28d1a70cabd1505f3a72b269e7297617e4a3100e0dd71ba4ba2667515b87e3d22e6acddd0f3d472ad57d56077602d0271c321182b6561497ebe6efe15e2136d8fcc796e054e915440bc34d7ff25728df8aaa143a8fc4ef0203010001a381be3081bb301d0603551d0e0416041471ecc5236eaf830abe9e1aa19a6487f2c4ae19b5301f0603551d2304183016801471ecc5236eaf830abe9e1aa19a6487f2c4ae19b5300f0603551d130101ff040530030101ff303c0603551d1104353033862075726e3a6f70656e36323534312e7365727665722e6170706c69636174696f6e82096c6f63616c686f73748704ac110002300b0603551d0f0404030202fc301d0603551d250416301406082b0601050507030106082b06010505070302300d06092a864886f70d01010b050003820101004a3d25e1f7ab333905c3314f213c8d519e31fa6a9e0738e3015d2d49ac9186e86927e0938f784f960ac0a1b82a1e82773252f5d027c2eac39246b95778741dfc98f2f84ca7a6beed4dbb9c96e144bc4929e54941e9a34a3433587de1714d5007ef7cc9b7c386548b072506e228771c3085a7485710a55493c5701ccca72560ee68bf8b87c826fcac0eb373a644f9537eab9f7e54f743ae96e2676cae38df58af4591ecfc63debe8449438927499e6ed49b4004a2498860ec4f9bf79098ec6ddc71670e36e1006fead69187e9add512ebaf883e208e131afb86da5409133f3c8c69ce79b4f9bf657ac9f14a20bd082a42b33fc5bafdea342904bb067ef24ecf49140000006bfe3676b53f5edf26f76a606542ba00bfce54e40497e3eb476c035808a5649271012c7008ae39b5e4dbd00517c276866b237a77ba17ee9a02ef554092cabe00abc1c80bd8bffcae7e7c68b41c8bd58355f42d395f40966c791383214e1455c5aab39600fee03c1623ead5244cd42298037bbebd5bbf4e7e1184396a2f4307e6ec06dd3791b414a63a6e3a6f6c7a6edcb75cafc183db05e1f51eed8034412cfd8f2b00350b38266160d68a0fbefd0028aea56faba92f796cb7b80c409f5648695555a351f993265e62bfedeb22650743e454c8e60df21f7d4b0d44c46270a001ae3aea912c26f6f42a83260be0c59b9f0101c14c55ab85387f1ea8571e4eeeff99856c3ea7c6f6c7e0d220bccd9b0e354f698f6d08ef4316cbbf75b14991fe7ea2cc2d1093b6614f865d5ce65c613acd7d44c8b82a8efff81e42a97f8461d0cff10b58f0d2d86f488fce7c1e3012da5f963b213835e90da00f3f4ed8887fc90a936064ee3103129bec03369269214cf7076fa6d1a60c9ea5b7e3fbc7de1ec93509fc655872bf0907e5cac05c0676c25d107692ed0f0e6e8af46d1448d5d640ce8e2423b8c03ebf85bc1e2f4bfb936d7ade7723c9fb0aeb8c235310ebe065523a04ac22a41cd0c3772667dd360f6223dd44d1477080e1942606f427d67ccadda952bebd4c941bafe066dcc15fa0a01cd67f037ce2a131e25a521388d46119a305e74cec6a57d0fa685fb6643492e977619291774f");

        //random public key required to use encrypter_decrypter object. (we only use the decrypting part)
        let server_cert_raw = std::fs::read("src/crypto/tests/uaexpert.der").unwrap();
        let server_cert = openssl::x509::X509::from_der(&server_cert_raw).unwrap();
        let pubkey = server_cert.public_key().unwrap();

        //private key to decrypt the client request (server decrypting key)
        let pem_key = fs::read("src/crypto/tests/key_server_ctt.der").unwrap();
        let server_key = PrivateKey::private_key_from_der(&pem_key).unwrap();

        //decryption to get client nonce
        let mut client_decrypter = EncrypterDecrypter::new(
            AsymmetricEncryptionAlgorithm::RsaOAEPSHA1,
            &server_key,
            &pubkey,
        );
        let decrypted = client_decrypter.decrypt(&encrypted_client);
        plaintext_client.extend(&decrypted);
        let (_, opn_request) =
            crate::msg::open_secure_channel::OpenSecureChannelRequest::deserialize(
                &plaintext_client,
            ).unwrap();
        let client_nonce = opn_request.client_nonce.value.unwrap();

        //decryption to get server nonce
        let pem_key = fs::read("src/crypto/tests/uaexpert_key.der").unwrap();
        let client_key = PrivateKey::private_key_from_der(&pem_key).unwrap();
        let mut server_decrypter = EncrypterDecrypter::new(
            AsymmetricEncryptionAlgorithm::RsaOAEPSHA1,
            &client_key,
            &pubkey,
        );
        let decrypted = server_decrypter.decrypt(&encrypted_server);
        plaintext_server.extend(&decrypted);
        let (_, opn_response) =
            crate::msg::open_secure_channel::OpenSecureChannelResponse::deserialize(
                &plaintext_server,
            ).unwrap();
        let server_nonce = opn_response.server_nonce.value.unwrap();

        //deriving client keys
        let client_keys = crate::crypto::hash::p_hash(
            openssl::hash::MessageDigest::sha256(),
            &server_nonce,
            &client_nonce,
            32 + 32 + 16,
        );
        // let server_keys=crate::crypto::hash::p_hash(openssl::hash::MessageDigest::sha256(), &client_nonce, &server_nonce, 32+32+16);
        let client_encryption_key = client_keys[32..64].to_vec();
        let client_signing_key=client_keys[..32].to_vec();
        let client_iv = Some(client_keys[64..].to_vec());
        //client create session message
        let (mut plaintext_client,encrypted_client)=seperate_plaintext_encryption("4d5347467006000002000000020000007725c8ac758db2b629072b1d6c60cde915ab8d8d7abcb7d3a384fcd8716c3efb1074b887085d171badbbd219b2d91ea2e3b21642871fc6b3757427273373e1622535bcdca207c593b1c3a3d499b153d67add68c83497c3a2e993a0255c784c3d2d8cfb8b62fe3ab706b9525eb331de1563a4b2736e82b6a93b71e3b0319ce6c59daca4ae2ff6b4705f65aef720442614acbfcdbb87f8af1d7fd29a4a0006019d337d36472af7225e36dd75efb2064b38342a6eac84e91a2a2ab4349bb6eb7e7e1094d5e0c39ca12700ae8d93473fa3552fc09617b10447e674ac9e80b4d0815fa73566b53a42dcf4bf0fc415eadba852ea671f96b46e986b165179ed2aa2fdb784eaf7bf90d4e3116e7318bcf60f0db9aa2e5dfb1f9cd10264a3ef08ac76de21f2420351efe31792783255d72b8a19ba2d8c880f1308f9bb3bc4ddb80b4a1a2991d606cd343a7685e4669f087cd4d3ebcbec2beeb7c25cc8c5190b043a415fde79d8cbde473f38cadb9155cc870a708b0432bb28003d98ddc7cd5cfd679f04c3492d19df425ea3385c08f3ed4b968949704199a006c5fa2ed7dc2aacf950b83f2c0defe6a76a4d91aea5695eb06f677499f8d7742196cff9ff59d2b37a8f73562506ac27248a90214b3903c31e4926692f110c0d8c1da636dfa6fd232cae5ef0fd2dabfcac5b8423212e90284a097a3239979ac6de6ada168a281a6975c39c343478b2d61421a358fde8efdeeb09019d1bb884e523883745a523c08177a9dbc03c962936891c9f554801bbf7548173eb9645d5341c4b5ab37658595523a556cd0d250fe133de0f5de5dcef28e232b46c6ad9857e9b2c60835842e2abb0b91d9c56a1244cc28c1be067fe1eed32dc31218d880c033213eb5012a8e1957f70dce742b580f9bb0f88a3345dae401be5a6e16ed8c35394ecf53a2c706c2643620ddee4e3ade4f3d57cc6f7692402e67e4e51145b4455f5166d5232ec1859acfc20d2c34b14a66d9e52521051e670911308f0fbf1bcc2082c3f563ad53672464e80e67f35bea77c7a55c25f7e5b300b843d795a0bdd198469d1a1eba79c1fd92d949739460c85504ef7ed6772be513d5a87d5eda3c1b6043a0485dec35b740281587789006f0836feead34f22b64827f63baef36b010a2e0df248c9b37d1c92cdc2fe3b6a8551c3c11ec512b1176792a856b5dc35a4cff1c479a257f8caf2297812a5ef19be96e70430e1fa0116ecaf9611646ca0e1b11f37d626b75f29798997968185690242dcd4d5de43e37eb3ce133c5ba4f18c68ced2469cdaf91cdf48f3a8f6c76888e6d7c5095e5dab86b103108775b1ddffc7575e2c477335f5f66c2397d33dfe56c0fc5fabc753d477d679ddab5b8c28330593b7ab9a2845071362b9f70c47eb4d95d3edef912434d4568a8a933206fcb29f01fafed1ce4aa7c89467421f570e693717d3f47830158f8f8cb208134425ab3c846432174fac510ccb66b181aa915b074da701f7279c4b20c20343dd6e4cb5d8b5a6e889d620261bcf641206f0bc22757b817df6d29d401fe2c509970c4d0898ef01c4e50aabc6886a0b36329e4bd3269174917060c1a8efc4dafd20bf14e2ad01d879efbf838605a4d6e83b112a42f4643d8708937c5526835e4064710c751b818c0517dbfa6b845691d9408829e129dca0384cf8c6105fc92082150f03c7a97ee76eb54ac5819c4276b98b7d5d4bf3d7b6ff7758700f8e92c005062ef59b6a82e40e2b20e3a31976ec9befcb3817eb6a9beddb32970a6ba0775a32eb66c2fbb02f15e46a44e5c8c1a4154004755c3321ddc25922c47f76403b80b9368df357cfb1938fd9218c068e6951323fe1d75b68ec74d8f45d9265493b71684b91bdb9d49e68676e48ccdebbfce7b3d2bba1e6a8d78aebf75f82be787ea8be286d1458e16af8a4c93bee03a19e05cebe19161d3379691f8572f5d06d756776cb9d1cf44d3bacdd7b0420f4ba486fdc94c7eee290750281db7808ac71ff7c2543470a4032f0616bef753d1168f78c793d33dc842e07f4e3db18aabdcdd16327e3613916f88a8ffcdb5a73f49fb02978449c7a5d19206fb5b1b81babdf327e61170564db0f61530f680b430ecf5b7a97edff47da0ada9a2c59e6658804714c32f2b2385947d6b3a2f2a2f852a2a874d0bf962a1a39f53aef4e3cb14b2beee13239a8ee6a34e48f6700e58a62452f9518762c185ac7370a19a7756127eff219f843447012ed4b9a905d92d0e59e55057c6a88fca573eed34d0fe95c4a577f5ac9e558db1a991248108c8fae234f16a8b6");
        assert_eq!(16, plaintext_client.len());
        //decrypt the message
        let sym_cipher=SymCipher::new(SymmetricEncryptionAlgorithm::Aes256CBC,client_encryption_key,client_iv);
        let plaintext=sym_cipher.decrypt(&encrypted_client);
        plaintext_client.extend(&plaintext);
        let signature_size=32;
        let request_length=plaintext_client.len();
        let verifier= SymmetricSigner::new(client_signing_key,SymmetricSignatureAlgorithm::HmacSha256);
        assert!(verifier.verify(&plaintext_client[..request_length-signature_size], &plaintext_client[request_length-signature_size..]));

        //deriving client keys
        let server_keys = crate::crypto::hash::p_hash(
            openssl::hash::MessageDigest::sha256(),
            &client_nonce,
            &server_nonce,
            32 + 32 + 16,
        );

        let server_encryption_key = server_keys[32..64].to_vec();
        let server_signing_key=server_keys[..32].to_vec();
        let server_iv = Some(server_keys[64..].to_vec());
        //decrypt server response
        let (mut plaintext_server,encrypted)=seperate_plaintext_encryption("");
        let sym_cipher=SymCipher::new(SymmetricEncryptionAlgorithm::Aes256CBC,server_encryption_key,server_iv);
        let plaintext=sym_cipher.decrypt(&encrypted);
        plaintext_server.extend(&plaintext);
        let response_length=plaintext_server.len();
        let verifier= SymmetricSigner::new(server_signing_key,SymmetricSignatureAlgorithm::HmacSha256);
        // assert_eq!(plaintext_server[response_length-signature_size..].len(),32);
        assert!(verifier.verify(&plaintext_server[..response_length-signature_size], &plaintext_server[response_length-signature_size..]));
    }

    #[test]
    fn create_session_uaexpert_signature_verification_decryption_sec_policy() {
        //open secure messages
        let (mut plaintext_client,encrypted_client)=seperate_plaintext_encryption("4f504e46700700000000000039000000687474703a2f2f6f7063666f756e646174696f6e2e6f72672f55412f5365637572697479506f6c6963792342617369633235365368613235360b05000030820507308203efa0030201020204628e4cbf300d06092a864886f70d01010b0500306e310b3009060355040613026672310f300d06035504080c066672616e6365310f300d06035504070c066672616e6365310c300a060355040a0c03747370310c300a060355040b0c037273743121301f06035504030c185561457870657274406172746875722d636f6d7075746572301e170d3232303532353135333532375a170d3237303532343135333532375a306e310b3009060355040613026672310f300d06035504080c066672616e6365310f300d06035504070c066672616e6365310c300a060355040a0c03747370310c300a060355040b0c037273743121301f06035504030c185561457870657274406172746875722d636f6d707574657230820122300d06092a864886f70d01010105000382010f003082010a0282010100c746ee14ed257cc8ef0d18fd3a6dd92c1f779b55978bca7b8619e433369da8fc577a6e0cfb541d11698651cdd1ab2cee04809ead37e64b33df938b05b1250a9da7849adce299285dd289a45de52a7304dda455d1ce02fdba962e258d49d380c49371637fac3a5ebddb7e532e9389ba8391a671fd95b6212d13001f4863b543792efa7e2b4366f25b141c88fc3741643d7988df0b4c4192b46fba7faaf95b84c1d73298d4b908eabdfcf8e6f3678464cb5d128e7b98d2a9c3ed5c8d15600ab918b6d5644663a78e6f1cb8e4ae33311b37c0462a0931296c393b4886d2fed5e1ae88afc706d129b466aec6a591bca378a80ab1237f330c15c70110a2b30fc125670203010001a38201ab308201a730120603551d130101ff040830060101ff020100305006096086480186f842010d044316412247656e657261746564207769746820556e6966696564204175746f6d6174696f6e2055412042617365204c696272617279207573696e67204f70656e53534c22301d0603551d0e041604147a42d750534d8a4cd0c88d25edec5acab6cb74cd30819b0603551d2304819330819080147a42d750534d8a4cd0c88d25edec5acab6cb74cda172a470306e310b3009060355040613026672310f300d06035504080c066672616e6365310f300d06035504070c066672616e6365310c300a060355040a0c03747370310c300a060355040b0c037273743121301f06035504030c185561457870657274406172746875722d636f6d70757465728204628e4cbf300e0603551d0f0101ff0404030202f430200603551d250101ff0416301406082b0601050507030106082b0601050507030230500603551d1104493047862e75726e3a6172746875722d636f6d70757465723a556e69666965644175746f6d6174696f6e3a5561457870657274820f6172746875722d636f6d707574657287047f000001300d06092a864886f70d01010b05000382010100bcf7ee2a5769c333a53025eb8c3c97f9a486d278dffc739385842a56ec3f9df6e0908d031b63dc0438abbd6f8fd2f631d2df8c65205915102a0cd8e655f5dcacef00175bf9c634677ff40db3f9585f0c946faa7904db78063be5fa81bf642590ff6ef6660308ba1d8f8e869b0490afc63eae73ffad012c69e62a7ecc8feaa74435246c86ba323c9edb9a51b7d803a33cef94e6ba5b962820743109f377c0fd596a3ade429e6490c6c2a88d94ac00a40a7d53111d031446298c67761d8a80744afee4a390649528f41eb8c8a66b150cebdb4e099de2c36bedbbe46544b767f7f89fb017996d4aade56fe36502368be4bd5386026f730086ce8e6733bc25342ff114000000821de79e9b71e7310a80340bc92a2c3a23c82c9622b314b2968c0c10f96aa70d3110fa52f706b13a1c9f87ef562970c2cb1c59539e620653b02bae024ab7cb1d47bfa325b6012d230216b48e2e444c24f8f59ff06275eda36c2a3d393c51faaa50f8ee398a41d9cd3ee56b5119cc26e4e6340a87d9a3408f49eb0af2af3e643e894322d71788e8f3c1d39bd98943b7d5c0cab99cb9db04c3809eeec94b8e9170223a44d36356f25e57ec625e7d792cd212be8357f80031b749ecd9a1b7a273ceb653e96d42fa6b304569a980b141b64e5618bfdf50a53d793ff5b286088537879990dbb16fbf4ce5f3cdca0a90eb978bf7baeeca2b348e8fbb88802a95f4a676494e3d0b8040592b0f2adb0edef5a66705d455a6735a00d21e8d97690bcccaa4c9999222acd5f8ad392c885fbe73828abd395970cabf7cf54f2326bee20f39702b93c2e570f5418a4007fb7f393aa8bb30711c31d064ecdaca8c742b5cfeb6fdaacd21ae124c3392bc250a10cba619237e023018c185b84722ec834c90adfa8aeb65e0c6bef73a4d5e3aa67625a862c46adba637e9b49f219e551e33da782c555bea11756b454e06814bf19369464f7082d78af4f9ec12d63a438c5e59346192b6cb04242af602bb2fffcb81686635f35c0fcb6128129c7889ecdd17991562b23f26965d67a7fd34ac4f81901f1262d58b2433303fe439cc40efb700d25b3a9d8bab115e537177a59e3676209612e42b6609fcef");
        let (mut plaintext_server,encrypted_server)=seperate_plaintext_encryption("4f504e46b80600000200000039000000687474703a2f2f6f7063666f756e646174696f6e2e6f72672f55412f5365637572697479506f6c696379234261736963323536536861323536530400003082044f30820337a003020102021449b1e44dc0660bf9720575beb5f24014255bf617300d06092a864886f70d01010b0500308180310b3009060355040613026672310f300d06035504080c066672616e63653112301006035504070c0970616c616973656175310c300a060355040a0c03747370310c300a060355040b0c037273743112301006035504030c09736572766572637474311c301a06092a864886f70d010901160d7265616c406d61696c2e636f6d301e170d3232303530393130303130365a170d3233303331373130303130365a308180310b3009060355040613026672310f300d06035504080c066672616e63653112301006035504070c0970616c616973656175310c300a060355040a0c03747370310c300a060355040b0c037273743112301006035504030c09736572766572637474311c301a06092a864886f70d010901160d7265616c406d61696c2e636f6d30820122300d06092a864886f70d01010105000382010f003082010a0282010100a333dc608e3566306034e9da1a0193cbc0dde240c8e472b60c67c39a49672197475ff13be923ff203b1bf5010b03022fbb607633d5fbaadd3c0d2fe278bb4f7ec7695872da23c9e369cfe646205d15c3907d30f0df187348bb3ed4859857f9fe3f31e2f70db86509bdcf28b5fef45235b534ab38fdb2574b1d72352bb903abdacbc73bd4d394c6094f2f19ed0d272da12f1a198bd01984d9824746caec3a1daae45d32e8c6e68d844b28d1a70cabd1505f3a72b269e7297617e4a3100e0dd71ba4ba2667515b87e3d22e6acddd0f3d472ad57d56077602d0271c321182b6561497ebe6efe15e2136d8fcc796e054e915440bc34d7ff25728df8aaa143a8fc4ef0203010001a381be3081bb301d0603551d0e0416041471ecc5236eaf830abe9e1aa19a6487f2c4ae19b5301f0603551d2304183016801471ecc5236eaf830abe9e1aa19a6487f2c4ae19b5300f0603551d130101ff040530030101ff303c0603551d1104353033862075726e3a6f70656e36323534312e7365727665722e6170706c69636174696f6e82096c6f63616c686f73748704ac110002300b0603551d0f0404030202fc301d0603551d250416301406082b0601050507030106082b06010505070302300d06092a864886f70d01010b050003820101004a3d25e1f7ab333905c3314f213c8d519e31fa6a9e0738e3015d2d49ac9186e86927e0938f784f960ac0a1b82a1e82773252f5d027c2eac39246b95778741dfc98f2f84ca7a6beed4dbb9c96e144bc4929e54941e9a34a3433587de1714d5007ef7cc9b7c386548b072506e228771c3085a7485710a55493c5701ccca72560ee68bf8b87c826fcac0eb373a644f9537eab9f7e54f743ae96e2676cae38df58af4591ecfc63debe8449438927499e6ed49b4004a2498860ec4f9bf79098ec6ddc71670e36e1006fead69187e9add512ebaf883e208e131afb86da5409133f3c8c69ce79b4f9bf657ac9f14a20bd082a42b33fc5bafdea342904bb067ef24ecf49140000006bfe3676b53f5edf26f76a606542ba00bfce54e40497e3eb476c035808a5649271012c7008ae39b5e4dbd00517c276866b237a77ba17ee9a02ef554092cabe00abc1c80bd8bffcae7e7c68b41c8bd58355f42d395f40966c791383214e1455c5aab39600fee03c1623ead5244cd42298037bbebd5bbf4e7e1184396a2f4307e6ec06dd3791b414a63a6e3a6f6c7a6edcb75cafc183db05e1f51eed8034412cfd8f2b00350b38266160d68a0fbefd0028aea56faba92f796cb7b80c409f5648695555a351f993265e62bfedeb22650743e454c8e60df21f7d4b0d44c46270a001ae3aea912c26f6f42a83260be0c59b9f0101c14c55ab85387f1ea8571e4eeeff99856c3ea7c6f6c7e0d220bccd9b0e354f698f6d08ef4316cbbf75b14991fe7ea2cc2d1093b6614f865d5ce65c613acd7d44c8b82a8efff81e42a97f8461d0cff10b58f0d2d86f488fce7c1e3012da5f963b213835e90da00f3f4ed8887fc90a936064ee3103129bec03369269214cf7076fa6d1a60c9ea5b7e3fbc7de1ec93509fc655872bf0907e5cac05c0676c25d107692ed0f0e6e8af46d1448d5d640ce8e2423b8c03ebf85bc1e2f4bfb936d7ade7723c9fb0aeb8c235310ebe065523a04ac22a41cd0c3772667dd360f6223dd44d1477080e1942606f427d67ccadda952bebd4c941bafe066dcc15fa0a01cd67f037ce2a131e25a521388d46119a305e74cec6a57d0fa685fb6643492e977619291774f");

        //random public key required to use encrypter_decrypter object. (we only use the decrypting part)
        let server_cert_raw = std::fs::read("src/crypto/tests/uaexpert.der").unwrap();
        let server_cert = openssl::x509::X509::from_der(&server_cert_raw).unwrap();
        let pubkey = server_cert.public_key().unwrap();

        //private key to decrypt the client request (server decrypting key)
        let pem_key = fs::read("src/crypto/tests/key_server_ctt.der").unwrap();
        let server_key = PrivateKey::private_key_from_der(&pem_key).unwrap();

        //decryption to get client nonce
        let mut client_decrypter = EncrypterDecrypter::new(
            AsymmetricEncryptionAlgorithm::RsaOAEPSHA1,
            &server_key,
            &pubkey,
        );
        let decrypted = client_decrypter.decrypt(&encrypted_client);
        plaintext_client.extend(&decrypted);
        let (_, opn_request) =
            crate::msg::open_secure_channel::OpenSecureChannelRequest::deserialize(
                &plaintext_client,
            ).unwrap();
        let client_nonce = opn_request.client_nonce;

        //decryption to get server nonce
        let pem_key = fs::read("src/crypto/tests/uaexpert_key.der").unwrap();
        let client_key = PrivateKey::private_key_from_der(&pem_key).unwrap();
        let mut server_decrypter = EncrypterDecrypter::new(
            AsymmetricEncryptionAlgorithm::RsaOAEPSHA1,
            &client_key,
            &pubkey,
        );
        let decrypted = server_decrypter.decrypt(&encrypted_server);
        plaintext_server.extend(&decrypted);
        let (_, opn_response) =
            crate::msg::open_secure_channel::OpenSecureChannelResponse::deserialize(
                &plaintext_server,
            ).unwrap();
        let server_nonce = opn_response.server_nonce;
        let mut security_policy=SecurityPolicy::new(SecurityPolicyUri::Basic256Sha256);

        // Symmetric encryption part
        security_policy.derive_symmetric_client(&client_nonce,&server_nonce).unwrap();
        //client create session message we ignore it since generics function are server oriented
        //decrypt the message
        let signature_size=32;
        let mut response=decode_hex("4d534746802700000200000002000000853eca7ec6ee42ab4f82bfe452684cc1de2f34c3fc76caf34d221a0dbbe58b43a621e0465e6cf25eb45ea802df87bbe50c6c19510b65c1fc452e3c169a43794592c7b6b8c86eca8f2782cbc345768d65ae696d5dc84d4df8643f4809d69ec5390ff8d8ba5858ba0ab9f652711036b32908c2487498d7e0a351db85546886e07b0163d8c294894fac490c43a13efa8576814ce0edd9ce8ac7f1dda7f302a7db5329dd1eeb760fa46b481578c2058b0d6d460caf414fc456ae37dd33dcd697dc51dd142e87acbcc90cc033916ca7454751279aee8603bd45be082ca68f4e7b3caead8a92548f2c6e556e9b77946f96c76ccfafdf53bef38fdce63204e102780e920ccfd922bfb7604917c33575cc7408891dca2a571eb115a430ba82a75c795dd81788300e5b4240807b47d6669510117660ba4615ee042a9f2d243576217d8478e5ceec441dcd6bcb51598b52bdb06637dc97535f2565ddc3d6cb6ce2eb0ae316941e6a8cf7e3ec53b33d3f91cac9518a27d3a2cbd19a47fd30c2b1e59d8977d41503c05a6e7f5b5c532cd9d8b59af7baf9a7f69a2d1c322d7af7565f68e141a91e84e9a4fd23507e86d095f67a4ff990e6ef5d53172991b5dd66a7bda3d2cd793d3c3232bb1515ff9e618ea2e3a7269a14439f77f00140b499c0a1fe472ac2081d49e23effc766a77f3c270e73cf20eed06ed778b559cf6a7c5ac55be20a4acfb8850cf5775252c40ed4fc0a360362c0fd5340f68d4cd2511eedc4118cea947821343215a4d24a56b0e9968560070bea492d108a1c2233d2f07d95940886b54d53f198228a900d9da798efd9cc344cb9b69b9a60926c65be9edeb8ddc6020e6f3ca0a50b04375cf4d57fa56cb2f146ce151be9c089672f5f73e0aa7dcc93076b98ad71179f35407e8d961a4bac544112287161e8ecf9f724e6a5ef6d7c8008757a992002856af6cfcab496ba1c677ba4e129135875c0441603844ec76ac7e11571f8e892bdd59afbfcf89961f48472e53fc6bd0ade8009089cd9ff0d2072771c0b49573842e86c35359ead229738324504377362b2027a384564ece90912e7c530f9ba43f193c9e37cd4b959a85c8faae2cfc843160d25bfda9a4d1d7b63d0923264564c7cfc803e9dd234107d7248d87a2e912b6827a51d7c1b274408327fbc7b5ace9251608de4d5faaea5aa02a8f7dcf58d2d75e6747c80363e3642b195c42a5b0bfae2c1f92cc09c62d31a5c56c44e1c5e3fa8bd77642c07723d1274b22fa429803b3493bef7948b8db44f810c8897fe2adb7a228d84b750de3f0ae7bd1355dcff912ea9d0ed17aa9e7240cc6ec0be32ff997afac43531f6ae87d2eeb581221af302edca055fe687c070b6d1d157eabfe1a04e8503a9af022fae5472d93a0669f02f23300a6ab182759f03a3effac89059e51f802fa0fec7b7e5e91867c3a8bfc748fd48c7c9bcfdc132bf4f012960626c1ef491d7424887ca8842f7e8f4784e61847623e58d30852c6f480313953c22ff59621c9ea4b1bd12a198ad5ad7619ba4cee99d5af33a105621c59c65c9c6064b40889bf031c2914f6a66b8658cf6efa3e8bf4cdf708c69301f020c9d755a726c6701af6a358a5460bf2155250de00a16c2799c2b4e05b02deb0ac898b831d5c460f6205142989abc3ef4bb5e46ac3bc6e9fcc17db17b1f42c1ab73980dcbf1c6b2219fbb11515bca047cbf030caf1969ba5a27f75a82d465b9f919b81697d57ff17227edea0bdda7c74d09e480e73582a2847de8dc7e2a5d2107e4294cd9d3462a8af71c820b6b39dde14ad5da20f06d0c4a39dfc6c6b882e9984f4e5d982f7ad2cb9ba6c1a5344cb9104a9d5c44fb628eb34b4d64ce0f66d2d11073a913c8d41592d0a93926271c8c93abf052d888bb4b48b6167a67b23a89834fdf71c72a04e5c87d590edb5f2258e1c5d104629cc09ed2d61643d10e71d83c48e828aef9b410cf409af70bef3a88cc8602d810445816f5cdebf728229afde827987df14e4bac51b8cb3c8b6ad0d1eda29b5d708e81e89aa83a49bfaa7de661b25b5aa1d9dbfcedfaa533a7ce13a0e4f83d6709329f7f0460f7c95994bf48aec7082108058c7365ee09a2239d6bd1405633afdb75bf3ab3bd56339f3e5bc16b477442b92bcab378f3150833307e06ec2724ce70153952a65abec8162bd16c30912d3a03003b7ab5fb00e4a280607b9348ceb0c1746e9effd74b1c21e224adbe2f6000dbd28bb5ab85a4f564e37aa0d4f3fd87566b9ef2ece5df92efea937bd01611f030afb030cf912341411f0af5a60d4be74ad8d08129382d45e3a8a043b264a006c3faeaae4123d1d2880f60befc1f48e3f9d5c10483cba38ee6529b472c2fb443801e75f973bda82967f87b0edb2a7255f1e75573d286092e3fdfb735de7d3f588f87a04525b498deb1027f0288c8414ca379407a39da81cf88d76b8c5af1fef58f2218d860adeaba368a30407cd67134b897419dbb73d4f654f0d7b0a236530c91088c626ed4ae4d4344a3e84ea81b1af55f47d196381832c2b7bfcce68d8bed7e11318535ef4dc58528dd6b42bbe5592525f13ec4a01e8893e38c3afb90c0adb36f23864ecef6e7fbe2fabf7f6dfffdbd0ace19c3ae443b012dd8c949f848f1a0c9bf0243ca307b2008d3e2aad6134b139e9e61184b44ed6688c4993f3cb2e32cbbaac6455c797cc0907d4c0eaeb81c827ab30e9f729d9539438a2362cd404fcff2d7f332c6beeb320ee6ff2baf47342710ab4954168db38575b0d19b2e1d40e6d59bf358304dde0e6449f0c9e98e6f82b4811a7a2530dbeff0b97f2713adf75fff329c2955029a3ac400b4707f8c46d154f17af743f28b7f9faa42d5e81d42c1f6e10218c49a140c50d21549a833d6c6f67a7aa351c4ed6e9d3372dd6e11ded063b5f3d60002fc0da12465927384298e87dcac5e2da3cae9f1a969acdb2888d5bf185e8a57253b3d061d7a636a2c2672d08c8bae74d804a5362659eb40f04b6bc960075b5435ad0ada68fc55f34f65d49681588d3501f97f826d8f024a6ba8fbbc3b6fd892694df315f6892ee955fb6e17d3bd7e09670a63d9cdb75c38eaf965d1bf2d5bd5b4b057bc295413f0d22c4192d78507f8ea8419ba73c48bd9c2521699559da20d19d4f68f6eaae2a6a2b4e4ed58ecf547c03b443717ec38e24e497fa4ddfbe4b16c1fca2cc47cd2fa6c258b0bc51a5b44bf4d0d47807d016d9c05cb94426e4861e25225141fd792de010e647eaa8ba4c728a7751bcbc90a1eedfb0d9e7db09b895799db836ce0ef29f1a098058da1860f13c1165b368d2d1098b8c3a0229446c8459897462ab76455ced5ebfed5180f957d528a52fe4761b0cc023999c187b78446403d7abe7b20800bce11749c88f0e796b79954c3fe3fb883ba8cbb0e8196d6ecebb43b88a12bcc58a305a3f70c05c640f93dd01bcdb6b3032ae34bb6188553f7bc19ddfb82741a8b53f4c761a93abe73eea38bf46d6e43e45880cc40054d55cfce3db733a79c43edbcdfc21d942b24261d8091965ae2ef075602b8598efdb3f1f53616c37ff41ff22cdefc5b484fa3261c2947bbc85d48247ed3ecb367beeafc8a17a4c892e8af6263d450b7d2f3ca8e53aa29881548f7f3db97ebeebce37a99843fcc4a1689cdc5812246beeb632cc54118338f0a13cdf29c31fecd6230f4a90d87564bc6c86aea096379e2dd97242b71c90a4a67890f5a9c4f41deccfaa55eb9a4d09543ad12ac09fdb325b789e31216fd8d671fb4c3faadd1d77aedf4554960b799808fca23c89ebabe94d617e23642fd47beec5def26868015fbae78afd4ada9a92eebc6bbc2e6b895cb7ae8fbde7bb67bcd7eff696ed5d0ed8de0806fd22c2f9bf5c657d2f82504b293c3a6e0ee93640db999707a2daa09974b5495a19861e42b6e79969549a410e2291d5e5dd068f923491a389c6a4c3dd382afe8a6947fea744f731b76d8e33a5e6f03f594e132ea90612c1d1160a164a2094566ec8c85f0641a4f5da281f515465bb71ea5462303e894e73a4ac67d6730ecb489e8722820184eeeab57b1e45ebeeb264aed267b1b42148d02622adab3269d1cc80944789920eb6ab549f120339888a381908aa64fdb0c4273d662d1946330cdd3db1391064056b3347276ce10e71f3de308920246bf7fdbb60859e70e444be99f3d7999e6b2b2a722dc11bf7389660141b2806179dee199b1c725d415c8baa09c52761f49f8f69c31a0cecacb03b174fe817d3e62acb0a96a89ebf6eb7acd5be978a86b58e7db73404b7a99c1a1f6024ffd03733c36cb3e34a66f69566599411e171e7a71055bcb90ce090016ce7dc46e8a0e8c6986cca6b1bc5ca8d573d00a8ed70a989c073395ef18ac554f5f7ecdda1d33dbe6fc5e446067e4a415fc1caf854395bbd4b2e6d7b7ef2d2af175b5c62ccbf99b291103256e4746fbd8751d56682efcf7dde65947601c5c6bc492e2b6424ba8743adeaeb807ce8f037ba69ceeb888110c43a1395bfe2ec080aee80c03bc85d843d85c91efb77309ac074deb8417d1d21bb6cc8dab1b2fd9e3119e716ffb6d98d6751353e0ded27f2e2c62aca8e507664497b053b41e1c99258bfc0a8d80e870ac2c810363e0d3a6ced5f464dcce12394e90a91cc2690414bc16361332b5f818d25bdc90ba08ae8aea8680f90972037205c8d339604cc86746cc251c9a7f6ad02ea8af4c12db475f8bc7ef6fc1c681a80fc2ae8f9cf51c5c444d0de5bb8d320eca37428d7020bab51c0c55e1b8561cab4a9ebab3fc367e2256d18b1fec41828b3abc79c051a2579931085b29be2fe145ca1b58644f0e8441e0d8db96125d5acfa3410c4a509bae95de3336df329a2394f98dbfc01a6607d372ca4ffb5eeaac7775e9eeb96c930e70a6ec5c09e0d55378a4c4ddff528209e6ea17e93948cb6ae2b88eaca60973ef172676c288cdb99f38eff37a0ad99cd1e2181a4a37c83e0c2bcd0ae372b71d11afe487304b86d0bc42617f100b5ae8cd354b4a14b1ceb3de7c011a82981803efd8f30dffdaa9dee3787caef5d88e1529ef570c69c29a0b4f52d54b5048e0e8f61d79eebd1148591972bc76b2db9916c04e6b9d8e394e0ac6a73d4daf6d411b9fcedb761141172ffef174c7aec11f3e473966dedeec1b1436dd0a3dfb035a10d87d95bbcdcd758027d327f43d149e2d1ae7cb6fdf6c369a76875f1881686e23ac3fdd3aa784f1fb1eccb60f2b9f60094c8020e39445ecfb73a8f1794240ed32d6eea9e94c0331247a43aa5867c65a0c570b6c9c703e3fbb43e805cad0a48fb8a0131814fbc432e556972e70beb651b26c435c231e6ff64c1f4930e815dcf00b1f2887751d58249dd96d5d12cdc659979fcee7287e902f70d3a5fb3b3889b7acd6b87ccb6f4071ddcac8a73519cc0ec609828ee5b1b921b82d18f5c1f4d6826edf4c345b598c2c54f6cb58186ae4933a22b26c20e2cc27ddaf0d6fca1a32770aacfc5584f2a41f679e15fa58eb64d451b9ff20357f493e86addc88af4e9da8983903c7e5cf6c16cbcf0a7962db13b9ebca6f2f5144e54f294c2645b927d0a63a8f93db7c929e5a6d68725655804d34adca723da5de2e455a7a852f7c1ad2b9eda1ee972c5af6e6937314c658d3fc1d2c95529552f17bf37b0693bbcea8fb8152c04f4aa11275b824c73a4cd4d303f104a481800266579a3cbca0c1c3932d43f483b556dedc070ab08a5d44060ea49af7eadd58e383e75145235aac987a92e9e573df80ebd72f3694c5ba571e4556b5e5ae0357b0cf93cf32c262ff4489984f449a67b3fdb72b93fe42eb9045f9aac5dbb70bb9a3303a3e3fccb807a5d34b1487a51d6a2501da4cfb6feabe511e847c30befe896406036064e7a4781384955e6acba2d4a04101a71b4b210dfdd76b505b6059a99b01910e005eb067f0705ff398ad8163ec1e48dd2a0ffc75debf5742e7c15d9d33da9548f7f87d680cce9c692d54b044d51796d1180dfbb44d39b928266a9019d98a68916dbfbcdb52ec68f0458f8fbb8d298d71c1df9d9ffc018171245e9640ccc60b0e9a3173212320f61986d0fc496e765181cfd3c9cd7ae3d7923e8b310baa37334ad0223ffd86f07b400252d62c90c868cc99b600db00810cdaab051d4cecfe4db98401238fe77ded0925212b8a9d2b709692709f011169184eaf0f87a7ef43eea559868627bb8fa4c9797822c9aab369ad8f9655cbeba1210aa7160bc6922cfefb3ace0957835169c1e5eb5185863afc0b91fc8feed337cd49f1d0b1aac7ab3f19ac8463c65707b1eeb85e1c302c19c4b3288584c049074ceb2a12a93ae409da6b88ef950a54d12c1cd17fce24b5fb4623470e1c9a167d1e641dfce56d30731d0855b026d85e70ec1f8ab5051b6d0a402f45b2be0d2349a3951ed39b0f769f74f1c30ac8a9231cf99d7b19cb43174d1004f92d8814dea5b65a8e6d6b36b8c0b0c231f2e668f45644fa27db971bea3e81ae2eafb494acaaabaee9e8c849d0b3136fc4050f91194cddf224c6b1b67d99b821f8fe07a4e58d5bb802400c406adacd732869f2c104dbb80ce24042dad85b43af1807069c445b9785f45e82f604c4b748ce784d8cf18ea1653d9ab15eaae62050206d02469bf1f165fadd0f617dc9483e29c096cd778892ab5fb933373c9a9a30c838cfa11a486291f7b9c933499c58952dedd2b56e823ddaa10d439fe7531f4fa8ac896433bd735038d0b35ebc9a80476c35aff5675f51f2d1e2a03d40113663e24b800df580ac7bd1475388c3f7d7f1b2f6ff8b7c6ab7038b361c2e553f91785db5a956ac32e24d61e95b7c75d1a7ee55e03bd29a315398d47bf61ed989585d4fe8341313cc78b94d170603110b3a2f2c2e5ea9c8dcc3746b0832d856816aa6c69b19896be6c76e06f7e6dea09f0ee9fc39bb53407acff201e61a35b92d0b3806f99e3acbd9b4e0189b288930520d4cb89e168e7076656835ff6b52a85f2c74997da348667ae21a10707fb9c23115b1acd48a3c30bf8d7cd03729df74fe279d969e64333127c7506ce95d1fd893d8f639cfd73e3698cdc6d0b0e57b153f15e310d402289641129ff84fa766f7b2a13185c27da74558dc6979020eaf8102a067dacfa166cb4ed65bf712f6d5191b4ed621d19a779a853edd5908be51f70a655aab2badf112aa3c4711b545378c62cca98cc915b2d75f119f9aa4e14cfdcd700ca46d861905cc1d02026d4a8580028221d1817b8afb97f16ac5b59883c1e60c19d2a199bd3fef09149fe51e6b09aa699e5219418a5a699893d3fc70825ef48a50243d9e33c3d6c848d7a69ff9cb9db07cab72e1c940e7cc2b109777e9c2834c9360741929d175d68cd3203ff25ae05c357245ed7c6012063a0a715f199a7b40c3421607cd1435de774a4aa76cde96298506c001b943567e383c4981542a12f80bff40259450fec170c64e0c089b4036385ee1151e69b0bf16e7ac37806b3a7ce8f9184f198ca018045dc54b520ebc3344360bc8d3b5b0e7e5acdb32c1ea31e5b9dae8a1247f9718bb5899dd1be2cee021fdd3c9655e03cf5c8176ca92bdc56dad069286164807a73b5348b635791ab004232b01232f6fac9e8fecd8c6402ba9449dcf67b1a2d91b03c543ec5ef497256411b93655ee4b544d5b7790248855db9ae316c335fb7234aaf55229461bfbb78e0685f1edb37f6485500466e564fb97c845c4a1928f554637e143800a3aeb2ea23f7d3cd7ca571f08cf33366bdaef10503b8ad19532b14fc6db550d7dd46f573830ac845b15f5fcce53a1b0dc9e490a6ce1d4a0f51a6b026b60a35e407e5dc22ddfb07c19dae6017e1965e3d5c32f304a406cb3ab45bb1f040d0937d6cd98cbe3702c3feb9f4076dd785e20cd1af7e2535c720f57a5a4ef25756f2cbdc571b83efcc899ae3806c73a6ba6eb3f6eb1c8554cf46466834266e5d081d1200980ffc895e194ece8d66573b5c346b718b9fd6153b56681734d6558faeae6294bc580aefd729fd86508b93efce8728f97ba70d68008cbb2fd8e0072d47c275af7f9e9a67771f98498867245b848c106c8f1442e8762faa3e5b9a35c9a7709f9bb1156eb1f8ccb740fb54481d3681283ff8b52fbdd8185800a691f0c56dfde130d8891e3b275ff546749b15ec6bd20efc5087948fc1f86bd5f48d5a0797cb28e009e36191183709c32981b207fcd1c2bb0bcfcf038ef72c05fe62d5ecf48e849914d10c8262d9c13cef4e45b86a0525b5feeb80e60f2f81140a9796641aae4ab40333a318a693883da2bfc2564b078a1eb5ba43646063b45b0ddf585d84a61bc05fd62e5ffd266b26b2e70eac5081986a100251f7405130808c1cee96820b7f8f6a2f0060a34a4333e59d58ea219c817880b2b8b6cd5a91edcc9319e5601ea7dcbd6acb7f35ad7a19a0c09f9a39c3879d76bddd6708d1fdbb76457829640c8a45fcee92e32faa54f243b1cddd6cde8b4451f2cfa12fbdedefe7919885621e04d4f9ea0a65a5fb23a8dd25e221b8920d94f97f94da5e6edce7db9f8c288abd2bab88b6d31afdf2b6720b101a60dcaf11a27392c0aa1b952f9dead7f7f42447b072d8c9d300c406580ef603c27a87acc18f9c420742ef652274c4ee804e76af82fd2e180e22cbe52e88dc7c4619d5f449ea915c19655d047513e2006eeb09049a65219805a545b0f3960e491f2d59f35d24fbd80cba755bd49476ef059d9368408a31345a2d14f2a750a921550b9310f514796d37f10cc3136e747be27d855a038be3edc378da8b90b9d5d36411536bef26297024f082d463874b327e93b3b6e92bc1d5ec0fe80dbfe9cafb71ebb5ad347784edca04f639719d45eb1657a80171d73b69b66d6a2b98a5109847d8d8a7eb209a93bc1c8c681b6e10454e8007bf2346938e1631e460e267e33193de85d61133df3dd5d0c47cd04d4981c0c5e3da4388833589b03121447b5a63819a9042c0769d0752df8e08ca155a051c9eadc9509d7fee1b6b7eb36f191dd15392bfb806bede6b43a47ce231992268d4627f8b8e24d9046a36ef84ab691d99ebb348cdd418e00b2bf89c0f9cd0a3bc05a7fb7f4c6b4c9181f2cca64f056ff25656f48fe7df57dfce73c35257f1a98d75a05e416ef95614dd077081cd22f70a64ae18ef2af90330823be40175cd8cf03e86e7f43406b62515092202c3f3b69bf568a8443cf00793b053389bdfabfc1d7cbf96ab90aaeb9b7edc714398392af5bf3dd26c057fc58f33cbc3aacd266748bd309fa9d078b5a85e7f1d2532a50e5712e4b397f87488ddeb2cdc40ad7963ba98d9314375a88d931887712a711c30f025e08216411e97ceb687019e1e4a20fdd03fd59eb1a23baf31aece65c0d3e6fab71d6ed59f83f8e749459fac4a638aba8f437fef0f84f15ff463107cd70ad44857ab05916cbe7ec92ba2f13760cfa15821059a83dd609cfde44a86a7f78f95310078384831e59b44d8536d6e6a3e6ccab0c1b85dd8be319d39f024af65dec272cecd6d074a355e3d2767d6da3a31c5af705d4505ea8991b5d1566f77f4516b6113cdf76bc9f262919d9cdf2ac759619af04c40ab7d18d9dd72fd8e8fbc9371a37cec5eff2c7f4eaae42548e8a16284490d31a361ba1af5d0bc32dac776576c04dde845e2807c0ac1ef2b0d14f6fd4e2c99f6364ee5c88a4f8b87bbc42d3237e1803808565d1c3b33537f212f207ecc2ac49715a704886bdf90a10431b2010aeaba693993cdfa905dd6002ebcfd56c6a98f20e151381f343775f33c87670c597034ad626e8b6f8f720336a75ac83072e6c03b91840d90fa6a202653f41fb5a4c8641b96384755fed1706519f73265b2c52be221ee5bc82e85ab3c48b8bb08da94acdbc59d454f93e8c78a7bc1f93a71b93b9937a35c7c29cd5cc8b40d5d864e29804e79bc24568dd7df0f36141593f7afc82ab630ec3ac131f7fa6e08daa6e473ee008132260ee6c5dd5dac210ede6e304426050766239786d7e5427413a40a081384826056e0b39a1defc040fcc1ef5ff57026eabc839df7a7450a04a68c576e48767e732a069a84d2457d09727ac983deb551c40c7c2f5992ba689fafec5cdf73e1814bb93773ee94bef089ca95d95d7e85417595726787dbf69090fa5417a084f924205d97408699af6a11b7c7cefa429cd079f93599802cda296fa57026d5642d90fd7bf92535fabb6d5a4a96b2a0254781dc59a7d96890a2b544cdaf6ff5ff3f9849e067674d6524544d309c6167aaafc95ee88cb39eda6ae15033ba0946728d00b703d300a5c2fd91954cbcf84f9cb1994809e65e6bf9831386f1e8075903caad58c52bfd2704a8d3b188ab8e367ef53525eb12244288648f522125cef5477c12d1b41450435f03c6c32fb110f5248b837e3f6d7fde2a6d4e2600004c2d9e1aa89ef8c4a1fb87aa30043f13aee46015c643fbb0cda77cad46eb3fc4b1f5645ced01509f280802048ad55fa086ac62fe69b680e2c5b71294175c8eaef43f75f4435136521ca835a066161d31c3e25afb6a6f14e6c393674281d6b3fca9e1c16ed695b54471ba7bc951da90fd3a04fbee049778ecccf3030cd80f97af4e29953930112458c816341ded363df4703a3fded2c4ed7f1ed59988594a057ec799f3b43d02135945fb8baee2237d675eae43e0349232263475a64badb88f263f81b93d938ff5679d49a987371fe952048a4d7efabaad4556774112d66caf3595904ca2d7445ecda1452b006abaa392d14ebc693c469f1060319a741e6036b5bbcf8b53cb01bc7fac349ce321510c50e619ff68623cca46cf89fcd744ab6abcc8983c90ae7bf3d338afa489c747138833aa473a66b36c5c64001b69a8a0d3a3f9d478b33aaa0ce708099fb1fc5e04989ffdd29f4fd19cbf7ba7034da060c5709ae262b7989aceea721c1b1e42786f37471da4b80ae2ea7050d3c5b0bfcaa3068f6cee5c9ab6866331dc65b1ad9653ddeb41cfe41ea16cc5f4726015aa80312b09bb636c06de65a6936e4c8d6ed6cf9a41d15f46fe5bea89d783ef27d4ffff1da4cb88dbdeb588dc977033189d82989caafa484e701130593c6a837178cbc0ac5747dd951897788065c47f715828487b29f93a4fd9fe12b962ff256465925c5f12bc053b45b6d74ba7ca5605d94638446e7867a9dd8280c75f40f3597f61309c63a5e4d12a48e124b50f480dff2318ad5da051718e5dd09e266a3d70411cf1e05ac0e5a38ed603418164b4d04003fce9f9106f1ab15dd073952771ccc91fae182e7863cd8c384ced5eba3d501df0dc82387f7d83dccb9ac1c41e774ea1d70d872e9a678e6c82904aaa2e87da521c01ab793d44d0462f17afe1cc6ba300c16c25a2a78b21797bb69f9859c7d6d473adb0c054690673784c21872757b9c4fa12ac7cadfa96507235eb1c4c9190847146aa5ba634f56a2ce0d1d735c181d2146ed13424d76099f96f96b3577fbbdd624214d20d3e8a13fa8e2f2acbe72ec6f7f5501e848127a2e6e944cad242d1048dd312f2662543bf2b56bd4f53c1514792fcfd833959ddcb6730bd15d38225cb6dbce0b018acf864d68f03efeb6acabd4bff481c28298417270ee07a0d398421f731903bc65182dccfca0126cd0d7695d251a2c08d6f8bdfba1e1346cfa3a3fd90eebad63adc3330a7e33143072ce825cb5007d4ef29023a7d26c6f5b7eb923b0226218bfc5d598b4cb48d8b126f36764394ec3b5a5bcc4f52ac1274c3351e4a9d1460060370a55268d11e21bc2991d2b720d6a8f1fe48fe8f01db43d466662c03e1b1bd2c7437fc78233bce459729a5a762641ec4b559242c0988617fc0993ab0caa9b0436610bb6414b9b5b3839717e9f24ae54730187396cdbb78d61485c903cb17de13b12332e96b4a8d7f4a343d656559e0de51d593e4f16929315cfa59e8aa37c2f018a6e7f383186f7d19c318137ff250d161cd4e79ad808da0b7d3b5bbb872d1ea8f9812f4fd2728c40e8fb62b0529807273c87aa754bc5f7c49249bc82601bf655a0f1c733df1def0f6a73c04a05c6cd2dad17230e64b4ef4883da238e5727b77a9ae867ed4faa7188ddba134952754a78a2e915bc4bfd40b992ec7361ebf17b02b15324270acec081f2f55c3bff9ffce9370cc857ca634b7946305d16da2c7cf3dde3f1b1631f12beb670ee5dc6b5af10e772a71f2f91c11f212ade8639d6dac45fded09d560675b132a6d9994655f39e948f1950551798a6522891b3782f886ed69fede122dcd7e701c025475ab8d58c36ce1eba03b42cbf12b21ae75d754e0d30541473a937595ce89d156c55729757beb895ebdbb36706af98fe1b63e342752aee4ecdfcfeea40805a8d73c35e7e29d61fe3563dd38df07815ccfbd7ce5f8e5d496bfed5768b4e612546209b4f0681b647c1f2c23b60a3d2eba0f030f6cb9177123827b5c73031c4261448237a52a9d9ba7a967bad911e00d02780a105f392270d15813a008bfa57cc480d792c1b7fb7f34163a658756c9fa8452a68df1eff8bc49fbdefb0fcf4a226d928221209520e90db5ff1cc9d3c60510a7dba9a03587737e4bd2923eac2e8a230614e0d0bcdcc3fec66f827f1ccf54237d2f7bacf914dea5fdf200deabbafd2fa88f220610b189a9ad29c413f6e3ede471195928c23e1ce1e7fae4756b9b53c0a46c21a5b291046af8fdffe1609b61e7908a87454d7c2d37e49f5e0031e5eaf4850689d64fa160c1e51cac195593d442d69677b4802724d87ee0f537922fcc4b474be4240a8380dd47a46b60b10158d40d6b1dac0759669a5f7d04912cf2d5417009f2c3b26c0907f61b6450845f8f4231fcab45801be1c0108dffe8c7aaaec26d9f8c31459c8607b4345df252b7249c4c98f56548499c73c75745b04d4798c6c027b252464f99a7bbad5e02b37535a0f82b76255f8b4b98d0f703176ebb9c2ca4c76ab4a6ff384a41a4496566406786649bdd31b1f5d0bc27d9f3e727db4d2e99832a61caf1fe68409b28f3b374aab2560026366faba84a0674e45a66cc2ec501f03a38f6fa9f2897624efb96be3c3602fcdf5cfd41ad065b1974f39dc77ef90c433a08c7f888c1ae5cfc028253491ebc9605cb232847cc6836f03d4ab75b6b3df9d335efd0b7220dfaa7043d671f207650fe2aa897c7a38a606daa8956ccadf65f349ff6008ad31b99dfbb75856dd26259a9ddbc1891bdd5196a4c41bc9ad7f6c51e6a5a60768455cb50058144d7a033180816489d4e9cc2a427161965f9ef15406115216ddb38473d7dca827b09f8cfd4a9c965e1a01fcc8273d0005976455dade3ac01ca7249c618a3af100575fd5fb7d075815ba842ccaf5ff025a4aaa327839ea9e80640e0488fc9a698f70e85bc7fe2649c223ec1c8d43dad65212475c1ee6d5660e99df386e5790df89806e36b2542b2cc044a85e65ecfdec6763fc10b442884982d5c91733b94ed9e225c53064887967a9716abca0da0c8b4c869f83399856ed9695414f318b1bbfb74a0f68ad2310555ca819cf2130d4e263d449db320350bb1345d254e927332bdb3756d1a78f449420e2fa4f23d1c0e44afddfc1873c594dde59cd2b8506fd6c2afc9bedf091a251dfb2ac25fb668cbca33e92ccd62e17c0a25156ad61a999291179224e59cc3ac574c7aa49c4272c86079438805e9537525f7ce1efc39d3a68fba5e99648cded319cda421922ce45dd6d800e0e3596623bc182cdb8bfcd11545f8e734976278f64cb1c9708717ae261897b911a1035609a05b713c85369d0da29085cebe7943f7fc003491796d4e51f19a59f493acefe991d20d92768be27872eb73b0d0ab62726bee015e37da103aafb642649800a02365233320c24fbdff195d6e387a22a64ba6b56aafdb9adee3e056937d4532bc2a20ca474808b6376d3d1626bcd7d7afdf8af8760efa4fe9a79745a6a8a4b3cddc61dbe3d61f4057b94e9dc142c01a34d1f06c5a0cecacd9de36e407da47360a08142a933ff393493d08826a248930397314b45f2f41a8f2fd132da577da2c548474cd5696ba2ee03725b251b34b12fdfc08bf54cec54600963d800a651fc0081c393bc8c9efd3aa4172c452ca0b139fa929affe330990afabaa4b39b4cac83b0af82b55f9c5f494bb24eadc9595867fc5f1e7548108a3b6d1a44fca6e7249bf4603ed95ebbfe8a7e92d513113405048a3a24ad8251d2875424715c9689660521df3f8ea361b519073f9bbc913414fe62d6cd204b74b82140473432d387b022313778b1fb960875").unwrap();
        msg::decrypt_msg(3,&mut security_policy, &mut response).unwrap();
        let response_length=response.len();
        let verifier= security_policy.symmetric_signature_algorithm_server.as_ref().unwrap();
        // assert_eq!(plaintext_server[response_length-signature_size..].len(),32);
        assert!(verifier.verify(&response[..response_length-signature_size], &response[response_length-signature_size..]));

    }

    // le test unitaire mais pas trop unitaire pour les problèmes sur la security policy. Propager les corrections sur le fichier mod.rs du module msg
    // Remarque Osef distinction sur qui fait l'action, l'implementation server sera bien plus tard pour l'instant client ops suffit.
    //
    #[test]
    fn activate_session_uaexpert_signature_verification_decryption_sec_policy() {
        //open secure messages
        let (mut plaintext_client,encrypted_client)=seperate_plaintext_encryption("4f504e46700700000000000039000000687474703a2f2f6f7063666f756e646174696f6e2e6f72672f55412f5365637572697479506f6c6963792342617369633235365368613235360b05000030820507308203efa0030201020204628e4cbf300d06092a864886f70d01010b0500306e310b3009060355040613026672310f300d06035504080c066672616e6365310f300d06035504070c066672616e6365310c300a060355040a0c03747370310c300a060355040b0c037273743121301f06035504030c185561457870657274406172746875722d636f6d7075746572301e170d3232303532353135333532375a170d3237303532343135333532375a306e310b3009060355040613026672310f300d06035504080c066672616e6365310f300d06035504070c066672616e6365310c300a060355040a0c03747370310c300a060355040b0c037273743121301f06035504030c185561457870657274406172746875722d636f6d707574657230820122300d06092a864886f70d01010105000382010f003082010a0282010100c746ee14ed257cc8ef0d18fd3a6dd92c1f779b55978bca7b8619e433369da8fc577a6e0cfb541d11698651cdd1ab2cee04809ead37e64b33df938b05b1250a9da7849adce299285dd289a45de52a7304dda455d1ce02fdba962e258d49d380c49371637fac3a5ebddb7e532e9389ba8391a671fd95b6212d13001f4863b543792efa7e2b4366f25b141c88fc3741643d7988df0b4c4192b46fba7faaf95b84c1d73298d4b908eabdfcf8e6f3678464cb5d128e7b98d2a9c3ed5c8d15600ab918b6d5644663a78e6f1cb8e4ae33311b37c0462a0931296c393b4886d2fed5e1ae88afc706d129b466aec6a591bca378a80ab1237f330c15c70110a2b30fc125670203010001a38201ab308201a730120603551d130101ff040830060101ff020100305006096086480186f842010d044316412247656e657261746564207769746820556e6966696564204175746f6d6174696f6e2055412042617365204c696272617279207573696e67204f70656e53534c22301d0603551d0e041604147a42d750534d8a4cd0c88d25edec5acab6cb74cd30819b0603551d2304819330819080147a42d750534d8a4cd0c88d25edec5acab6cb74cda172a470306e310b3009060355040613026672310f300d06035504080c066672616e6365310f300d06035504070c066672616e6365310c300a060355040a0c03747370310c300a060355040b0c037273743121301f06035504030c185561457870657274406172746875722d636f6d70757465728204628e4cbf300e0603551d0f0101ff0404030202f430200603551d250101ff0416301406082b0601050507030106082b0601050507030230500603551d1104493047862e75726e3a6172746875722d636f6d70757465723a556e69666965644175746f6d6174696f6e3a5561457870657274820f6172746875722d636f6d707574657287047f000001300d06092a864886f70d01010b05000382010100bcf7ee2a5769c333a53025eb8c3c97f9a486d278dffc739385842a56ec3f9df6e0908d031b63dc0438abbd6f8fd2f631d2df8c65205915102a0cd8e655f5dcacef00175bf9c634677ff40db3f9585f0c946faa7904db78063be5fa81bf642590ff6ef6660308ba1d8f8e869b0490afc63eae73ffad012c69e62a7ecc8feaa74435246c86ba323c9edb9a51b7d803a33cef94e6ba5b962820743109f377c0fd596a3ade429e6490c6c2a88d94ac00a40a7d53111d031446298c67761d8a80744afee4a390649528f41eb8c8a66b150cebdb4e099de2c36bedbbe46544b767f7f89fb017996d4aade56fe36502368be4bd5386026f730086ce8e6733bc25342ff114000000821de79e9b71e7310a80340bc92a2c3a23c82c9663f4e25666d57139827f2d46b6036dc3175aa3146b1405ced21d82b46a2ac3d8b78fd6ecfba7759e8170b64eff46d5784829ca0fb34aaf44a90ad3250a772db645433e3540157f1e46e9ce61f164ce2ee2924665d5f6f369c9a38be91e7cec2a327a62f1a57e6124696e2c3fd22d33ab91cdaad594a036a7f3fc8a89ce22d2b759baabfb1523bf41bbee023a711d2ae492e68462e2219c25b639c6e5d13379f841d3b0da79b71d683d3d45a4674b471f72d97ca7bcab64b80b75e8d53517f12ae99c3ea013a74df7a2d41a45b799489b9a343a3329e89829508cf410ff9214df686181b6236540d7d86bea32f5db83e6b0022432f122aaaa02b0934a6eab88322910f5ed59366c4a0b37ee96b0120ca336763f73e35e5f80273e98ff644ae81bfbcc55e48dafe99862ab86935aea12edaab2e84f89dbb49bc82d1720445e15ec1cf4968e0322525a37a8ab016c7a7663a3d0f77d597625f671d2a9fb15a69e5d7e16cde950cb38759eb47712b521a624e302dcc9112fb2d37351ef9c104aae56db47d6316a96ac16b3da889ed1db2be26afa00ebef849bc5bb74f9417d74c4aa6c8ff5b1cd1bdc88b310c487e817d4b20db836493a9d84db568b42de6efd1f66fe9c0fc85f17040728a46a33180c5106d7acce46833172b716d36b1aea8701cbf572f754721ce43bd44ba2305bb11ab15ead2b3d35d61cc75d326c9e77ee46f5");
        let (mut plaintext_server,encrypted_server)=seperate_plaintext_encryption("4f504e46b80600001a00000039000000687474703a2f2f6f7063666f756e646174696f6e2e6f72672f55412f5365637572697479506f6c696379234261736963323536536861323536530400003082044f30820337a003020102021449b1e44dc0660bf9720575beb5f24014255bf617300d06092a864886f70d01010b0500308180310b3009060355040613026672310f300d06035504080c066672616e63653112301006035504070c0970616c616973656175310c300a060355040a0c03747370310c300a060355040b0c037273743112301006035504030c09736572766572637474311c301a06092a864886f70d010901160d7265616c406d61696c2e636f6d301e170d3232303530393130303130365a170d3233303331373130303130365a308180310b3009060355040613026672310f300d06035504080c066672616e63653112301006035504070c0970616c616973656175310c300a060355040a0c03747370310c300a060355040b0c037273743112301006035504030c09736572766572637474311c301a06092a864886f70d010901160d7265616c406d61696c2e636f6d30820122300d06092a864886f70d01010105000382010f003082010a0282010100a333dc608e3566306034e9da1a0193cbc0dde240c8e472b60c67c39a49672197475ff13be923ff203b1bf5010b03022fbb607633d5fbaadd3c0d2fe278bb4f7ec7695872da23c9e369cfe646205d15c3907d30f0df187348bb3ed4859857f9fe3f31e2f70db86509bdcf28b5fef45235b534ab38fdb2574b1d72352bb903abdacbc73bd4d394c6094f2f19ed0d272da12f1a198bd01984d9824746caec3a1daae45d32e8c6e68d844b28d1a70cabd1505f3a72b269e7297617e4a3100e0dd71ba4ba2667515b87e3d22e6acddd0f3d472ad57d56077602d0271c321182b6561497ebe6efe15e2136d8fcc796e054e915440bc34d7ff25728df8aaa143a8fc4ef0203010001a381be3081bb301d0603551d0e0416041471ecc5236eaf830abe9e1aa19a6487f2c4ae19b5301f0603551d2304183016801471ecc5236eaf830abe9e1aa19a6487f2c4ae19b5300f0603551d130101ff040530030101ff303c0603551d1104353033862075726e3a6f70656e36323534312e7365727665722e6170706c69636174696f6e82096c6f63616c686f73748704ac110002300b0603551d0f0404030202fc301d0603551d250416301406082b0601050507030106082b06010505070302300d06092a864886f70d01010b050003820101004a3d25e1f7ab333905c3314f213c8d519e31fa6a9e0738e3015d2d49ac9186e86927e0938f784f960ac0a1b82a1e82773252f5d027c2eac39246b95778741dfc98f2f84ca7a6beed4dbb9c96e144bc4929e54941e9a34a3433587de1714d5007ef7cc9b7c386548b072506e228771c3085a7485710a55493c5701ccca72560ee68bf8b87c826fcac0eb373a644f9537eab9f7e54f743ae96e2676cae38df58af4591ecfc63debe8449438927499e6ed49b4004a2498860ec4f9bf79098ec6ddc71670e36e1006fead69187e9add512ebaf883e208e131afb86da5409133f3c8c69ce79b4f9bf657ac9f14a20bd082a42b33fc5bafdea342904bb067ef24ecf49140000006bfe3676b53f5edf26f76a606542ba00bfce54e45f54670fb393c9a0fcc248c649f37223c1c604c8a2eb582658aec8775f40d206cb293aa20b3e1e29c015718ed0fc2ba88062b3477917acf183c911d4b40674d0566648de038816caf7953961401a0abab566602eb76792bd881ce2036c362aa37a84cd06f6f366258025e7176ceab55bbbaa3ec0c816d613897c609dd68e4aae378e74c90230d8a8fdf698ab0a90e2a6e7f9cf95a34cd625d32bb9c204a9361e9853e81603144bdfeff96d387ddd5ad40be52a2900ba51859aa4fc84c1573126984c1bc321b26888eff0c012482f6db18cc115cf0205e51b967b962094fa131438d7a4e72dca7a9696ed8ecd9a89f448a808ce64d26342214b4a22cf9df1b24783524d8223b5dd4debfb6546f7a1c8ff68af6e9823c13010e9bb8ed3958a91005306bce8121f617afa13eaf038f3b53499bb4286ea8a34cf3bd2787eb4c3023b3708634ecaa193e7b291007c342793dfaa0ccaae6d8ef6078253047ad418cc7e9c3bdb68b8fd9d7e090287f864440e70075a845dc1a82aae19c342efcf5c9b718874f9979cc6137052cdf6ca2df85fc74d0740a85f5a0fe7e2629ab85ecf3509f54dd99f9079ad32c2ac11dae1a5dada223670b0478c1e2686001d2cf00fcfffa423eab99ed040cbfcc1bbe0061b9a5e65b9ef585decfb4751aba20adb979aa2d20b3afb4750fafb1b591ffd37f093ce8e5574fd54cf5c828e2347f64e3a7add");

        //random public key required to use encrypter_decrypter object. (we only use the decrypting part)
        let client_cert_raw = std::fs::read("src/crypto/tests/uaexpert.der").unwrap();
        let client_cert = openssl::x509::X509::from_der(&client_cert_raw).unwrap();
        let pubkey = client_cert.public_key().unwrap();

        //private key to decrypt the client request (server decrypting key)
        let pem_key = fs::read("src/crypto/tests/key_server_ctt.der").unwrap();
        let server_key = PrivateKey::private_key_from_der(&pem_key).unwrap();

        //decryption to get client nonce
        let mut client_decrypter = EncrypterDecrypter::new(
            AsymmetricEncryptionAlgorithm::RsaOAEPSHA1,
            &server_key,
            &pubkey,
        );
        let decrypted = client_decrypter.decrypt(&encrypted_client);
        plaintext_client.extend(&decrypted);
        let (_, opn_request) =
            crate::msg::open_secure_channel::OpenSecureChannelRequest::deserialize(
                &plaintext_client,
            ).unwrap();
        let client_nonce = opn_request.client_nonce.value.unwrap();

        //decryption to get server nonce
        let pem_key = fs::read("src/crypto/tests/uaexpert_key.der").unwrap();
        let client_key = PrivateKey::private_key_from_der(&pem_key).unwrap();
        let mut server_decrypter = EncrypterDecrypter::new(
            AsymmetricEncryptionAlgorithm::RsaOAEPSHA1,
            &client_key,
            &pubkey,
        );
        let decrypted = server_decrypter.decrypt(&encrypted_server);
        plaintext_server.extend(&decrypted);
        let (_, opn_response) =
            crate::msg::open_secure_channel::OpenSecureChannelResponse::deserialize(
                &plaintext_server,
            ).unwrap();
        let mut server_nonce = opn_response.server_nonce.value.unwrap();

        //deriving client keys
        let client_keys = crate::crypto::hash::p_hash(
            openssl::hash::MessageDigest::sha256(),
            &server_nonce,
            &client_nonce,
            32 + 32 + 16,
        );
        // let server_keys=crate::crypto::hash::p_hash(openssl::hash::MessageDigest::sha256(), &client_nonce, &server_nonce, 32+32+16);
        let client_encryption_key = client_keys[32..64].to_vec();
        // let client_signing_key=client_keys[..32].to_vec();
        let client_iv = Some(client_keys[64..].to_vec());
        //deriving server_keys
        let server_keys = crate::crypto::hash::p_hash(
            openssl::hash::MessageDigest::sha256(),
            &client_nonce,
            &server_nonce,
            32 + 32 + 16,
        );

        let server_encryption_key = server_keys[32..64].to_vec();
        let server_signing_key=server_keys[..32].to_vec();
        let server_iv = Some(server_keys[64..].to_vec());
        //decrypt server response
        let (mut plaintext_server,encrypted)=seperate_plaintext_encryption("");
        let sym_cipher=SymCipher::new(SymmetricEncryptionAlgorithm::Aes256CBC,server_encryption_key,server_iv);
        let plaintext=sym_cipher.decrypt(&encrypted);
        plaintext_server.extend(&plaintext);
        let response_length=plaintext_server.len();
        let signature_size=32;
        let verifier= SymmetricSigner::new(server_signing_key,SymmetricSignatureAlgorithm::HmacSha256);
        // assert_eq!(plaintext_server[response_length-signature_size..].len(),32);
        assert!(verifier.verify(&plaintext_server[..response_length-signature_size], &plaintext_server[response_length-signature_size..]));
        let msg=crate::msg::parser::parse(&plaintext_server).unwrap();
        let msg= match msg{
            crate::msg::Msg::CreateSessionResponse(m)=>m,
            _=> panic!("nope"),
        };
        server_nonce=msg.server_nonce.value.unwrap();

        // activate session
        let (mut plaintext_client,encrypted_client)=seperate_plaintext_encryption("4d534746200300001a0000001b0000004e9524a4b659c021b923d0742c727c16f25c82ae3d0f7f5dc3c557f006ac3fa5ffa30f20aec60a95c37d726f1ce4cdcd8bef275538d2be0e6dd6c211d8702c07b26d708ba6a4b0fe5a2be0b324fae26023ddd1e8af01e3c6eed666c478d08f75a04cf8d3fee7e45ac9e1d1ed768d53e277c4ef5c3cd593953b879d8c47736e41b8f6fdfd3b6538b2603e08c8c59fe6e0c1371b18d0f09a52c8fc8052787b7da055f019f09d304d77a69cd878666457a2d2f66d8d2a52fad808b42157f0315a11078d48d6c9da0baa17d9067656464e3226386a617a3956ebda51e08eea00ceb8f5dd0ea4b6bfad7c4f18c2da20e0c293a41f981da266176b7ad736734e9b33f3e22820416fd4867da0d3cfd070e7f96f5493be21c42bb0ea7d6f3cecbbf4873a5f2ecf9bbfa9131a452456ae565be35a437485a1ae313f581e7935ec6bd084b3e9d9575f068e1324c8e5cd05d76a581a44cb6f8587cc64e8487b1649c3aae5c25c89c5f9836a9fd95a5b052d57fafeeeecde92391c000fe10b0340ad7ddf381b65a224e516805ef8dffcaf71a79da8ba658315a2ff8b4313941be0298c16db71b306c7e2df3a021e3ea29bdf95494c1bf8862d28371942cba4cfebacc48850068a2bbc3cb9cc178417cedb00090b49641ac233395bd55bdf7357924985fb0fa592f0a936d681e3628d53ec4057d4f0a5e6255578ae45befea596570429ef7e9f7aeb499517a22c80d662876205c5da3f647e61b38b2c1539c2e9e7b6577c738f1cb2b2a298450f6e175c896aed99f88a0a1d458b9801e9b5d07258dee1d1ef99840297318f8c35813c1b28eaaa429faf1b69119e88b0f1d1ec85cb7f3d3133db772aa957a708a51293fe25644197360820f6b6f72d58785ef82eb397201404c7c5abe5cb6c58a7b8fa5b018eb66215e33521679bb284e5fc1607a5f4f54c8d8c5017c6329a4673bc8683ceef8aa1521d02f2b4aa794be24c919403610c278e8f0dcc40d78f34d9fb967b7a39e17f5c2b98a855979f3c1d59c209b3d4584a2577a57c4dd2c9388a41381f1748d210cbfae477b91f36871bee810badd8ea055cd6dbad31582ff611b9d8f70deabe04b0f0");
        assert_eq!(16, plaintext_client.len());
        //decrypt the message
        let sym_cipher_client=SymCipher::new(SymmetricEncryptionAlgorithm::Aes256CBC,client_encryption_key,client_iv);
        let plaintext=sym_cipher_client.decrypt(&encrypted_client);
        plaintext_client.extend(&plaintext);
        let msg=crate::msg::parser::parse(&plaintext_client).unwrap();
        // msg.debug_print();
        let msg =match msg{
            msg::Msg::ActiveSessionRequest(s)=>s,
            _=>panic!("impossible"),
        };
        let signature=msg.client_signature.signature.clone().value.unwrap();
        // // let pem_key = fs::read("src/crypto/tests/uaexpert_key.der").unwrap();
        // // let my_key = PrivateKey::private_key_from_der(&pem_key).unwrap();
        let mut client_cert_raw = std::fs::read("src/crypto/tests/cert_server_ctt.der").unwrap();
        let mut verifier= AsymmetricSigner::new(&server_key,&pubkey,AsymmetricSignatureAlgorithm::RsaPKCS15Sha256);
        client_cert_raw.extend_from_slice(&server_nonce);
        assert!(verifier.verify(&client_cert_raw, &signature));


    }

    #[test]
    //python -c 'print("test raw rsa"+"a"*244,end="")'| openssl rsautl -encrypt -pubin -inkey pubkey.pem -hexdump -raw
    fn raw_rsa_test(){
        let pem_pubkey = fs::read("src/crypto/tests/pubkey.pem").unwrap();
        let pubkey = PublicKey::public_key_from_pem(&pem_pubkey).unwrap();
        let key_size=pubkey.size();
        let mut data=String::from("test raw rsa");
        let padding=String::from_utf8(vec![97;key_size-data.len()]).unwrap();
        data.push_str(&padding);
        let data_vec=data.as_bytes();
        assert_eq!(vec![116,101,115,116,32,114,97,119,32,114,115,97], data_vec[..12]);
        let encrypted = raw_rsa(&pubkey,&data_vec).unwrap();
        let expected=decode_hex("85caa8e1d7a1ec7d39fdd042b4e59b73cdd44321da3d2b982c897852187c364fe5991174af63a94abb3bedd88394a100ea2616fd9681ead2ba0eb1f254f16e4716bb71dea69fccf9b585a2b94f01ceb0cc3f5868e3516b5e309c55dac3d4e6b52e5e161edc0f0fbbc14bb12ccdc16ef1c0a762efaa0f424db49913cac24e67fe5000c6cbf62a36d62c01627da92601707444b0d15995d265942691522507d02bb86b36654bddde655d8fc14085e4fd27a6f32a2b0cc21399d65be6bab471b20a48008ac7a5690ded14e0b990f8212578a3c8ad795a875d42fa8aea134678d1c781c584e17bc84d5d3a1f30f66d2098c8120e755b9683b002aad8384d8a84e988").unwrap();
        assert_eq!(expected,encrypted);
    }
    #[test]
    fn raw_rsa_pkcs15_test() {
        let pem_key = fs::read("src/crypto/tests/key.pem").unwrap();
        let pem_pubkey = fs::read("src/crypto/tests/pubkey.pem").unwrap();
        let key = PrivateKey::private_key_from_pem(&pem_key).unwrap();
        let pubkey = PublicKey::public_key_from_pem(&pem_pubkey).unwrap();
        let msg_to_encrypt = "please work\n".as_bytes();
        
        let mut decrypter = Encryption::new_asymmetric_encrypter_decrypter(
            AsymmetricEncryptionAlgorithm::RsaPKCS15,
            &key,
            &pubkey,
        );
        let cipher=raw_rsa_pkcs15(&pubkey,&msg_to_encrypt).unwrap();
        let result = decrypter.decrypt(&cipher);
        assert_eq!(msg_to_encrypt, result);
    }

    #[test]
    //python -c 'print("a"*255+"A",end="")'| openssl rsautl -encrypt -pubin -inkey src/crypto/tests/pubkey.pem -hexdump -raw

    fn raw_rsa_per_block_test() {
        let pem_pubkey = fs::read("src/crypto/tests/pubkey.pem").unwrap();
        let pubkey = PublicKey::public_key_from_pem(&pem_pubkey).unwrap();
        let data="AA";
        let data_vec=data.as_bytes();
        
        let key_size=pubkey.size();
        let padding:Vec<u8>=vec![97;key_size-1];
        let mut test:Vec<u8>=vec![97;key_size-1];
        test.push(65);
        let encrypted = raw_rsa(&pubkey,&test).unwrap();
        let cipher=raw_rsa_per_block(&pubkey,&data_vec,&padding).unwrap();
        let cipher1=cipher[..key_size].to_vec();
        let cipher2=cipher[key_size..].to_vec();
        let expected=decode_hex("2dd0076b8473190e1a6843d393c4fa0bfbfceb4d849f6604901d5da3cdcb6a4ad32a84e9c3fb2f3b15ac6ea99391979d32ec2afa0a7902b7228b2d31bd756019b62ac8f9e9afce62f000254b67a99836cfe0b2b3a90e071a75f9a607157d150581fbd5e576c26f7387461ea74b949549f7c47d6ec21bc7ced8fc06ed1b438c5e0a7e9f88ba203fbff02d0a717db2b9419f5eda3300707f4552844540f6866572dae4cd443777a1bd17c74934d92897b6e7ff2c45d5d27a04d2aa722ee012b0a2887c8af07c3448decf695a2b5824f4e2b6ad35fcd62d33936468024638bb11752f0e67a154880b33c1ee602f130371f12e7cf376292a60bdc4ba7b12b795f83d").unwrap();
        assert_eq!(encrypted,cipher1);
        assert_eq!(expected,cipher1);
        assert_eq!(expected,cipher2);
        // assert_eq!(msg_to_encrypt, result);
    }
    // raw_rsa_per_block


}
